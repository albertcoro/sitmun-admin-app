{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","BtnEditRenderedComponent","prototype","agInit","params","this","refresh","btnClickedHandler","$event","clicked","getParams","ngOnDestroy","Component","args","selector","template","BtnCheckboxRenderedComponent","invokeParentMethod","context","componentParent","methodFromParent","node","rowIndex","colDef","headerName","btnCheckedHandler","event","checked","target","firstElementChild","colId","column","api","undoRedoService","isFilling","setDataValue","BtnCheckboxFilterComponent","valueGetter","filterParams","suppressFilterButton","isFilterActive","text","doesFilterPass","_this","toLowerCase","split","every","filterWord","toString","indexOf","getModel","setModel","model","onChange","newValue","parentFilterInstance","instance","onFloatingFilterChanged","onParentModelChanged","parentModel","currentValue","filter","host","class","ViewChild","read","ViewContainerRef","DialogMessageComponent","dialogRef","ngOnInit","doAccept","close","closeDialog","MatDialogRef","DataGridComponent","dialog","translate","AllCommunityModules","statusColumn","Map","modificationChange","undoNoChanges","frameworkComponents","btnEditRendererComponent","btnCheckboxRendererComponent","btnCheckboxFilterComponent","remove","EventEmitter","new","add","sendChanges","getSelectedRows","duplicate","getAllRows","changeCounter","previousChangeCounter","redoCounter","gridOptions","defaultColDef","sortable","flex","editable","nonEditable","cellStyle","backgroundColor","suppressMenu","resizable","columnTypes","dateColumn","comparator","filterLocalDateAtMidnight","cellValue","dateCellValue","Date","dateFilter","getTime","rowSelection","singleClickEdit","localeTextFunc","key","defaultValue","data","instant","eventRefreshSubscription","_eventRefreshSubscription","subscribe","changesMap","clear","getElements","eventGetSelectedRowsSubscription","_eventGetSelectedRowsSubscription","emitSelectedRows","eventGetAllRowsSubscription","_eventGetAllRowsSubscription","emitAllRows","eventSaveAgGridStateSubscription","_eventSaveAgGridStateSubscription","saveAgGridState","eventAddItemsSubscription","items","addItems","firstDataRendered","undefined","localStorage","agGridState","JSON","parse","idAgGrid","id","gridApi","setFilterModel","filterState","gridColumnApi","setColumnState","colState","setSortModel","sortState","searchValue","valueSearchGeneric","quickSearch","removeAgGridState","onGridReady","singleSelection","columnApi","console","log","columnDefs","_b","_c","field","defaultColumnSorting","sortModel","sort","areRowsSelected","getSelectedNodes","selectedData","map","emit","rowData","forEachNode","getColumnState","getFilterModel","getSortModel","setItem","stringify","removeItem","getColumnKeysAndHeaders","columnkeys","header","getAllDisplayedColumns","forEach","element","userProvidedColDef","join","exportData","onlySelected","columnKeys","customHeader","skipHeader","exportDataAsCsv","setQuickFilter","getAll","setRowData","sizeColumnsToFit","newItems","itemsToAdd","item","find","status","updateRowData","removeData","stopEditing","selectedNodes","selectedRows","selectedRows_1","selectedRows_1_1","getRowNode","refreshCells","deselectAll","newData","onAddButtonClicked","onDuplicateButtonClicked","open","componentInstance","title","message","afterClosed","result","applyChanges","itemsChanged","keys","redrawRows","deleteChanges","undo","onFilterModified","undoCellEditing","redo","redoCellEditing","onCellEditingStopped","onCellValueChanged","oldValue","has","get","currentChanges","set","addMap","paintCells","delete","size","row","getDisplayedRowAtIndex","rowNodes","cellRenderer","undoRedoActions","cellValueChanges","pushActionsToUndoStack","modificationWithoutChanges","getColumnIndexByColId","getAllColumns","findIndex","col","getColId","changeCellStyleColumns","color","columnNumber","columnController","gridColumns","MatDialog","TranslateService","Input","Output","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","MatFormFieldModule","DialogGridComponent","Subject","joinTables","tablesReceivedCounter","addButtonClickedSubscription","_addButtonClickedSubscription","getAllSelectedRows","joinRowsReceived","allRowsReceived","getAllsTable","doAdd","rowsToAdd","DialogFormComponent","form","valid","hideCancelButton","expandable","name","level","type","FileDatabase","BehaviorSubject","defineProperty","dataChange","initialize","dataObj","buildFileTree","arrayTreeNodes","isFolder","isRoot","children","treeNode","obj","previousChildren","parent","deleteItem","deleteNode","nodes","nodeToDelete","index","splice","copyPasteItem","from","to","insertItem","copyPasteItemAbove","insertItemAbove","copyPasteItemBelow","insertItemBelow","getNewItem","active","cartographyId","cartographyName","datasetURL","description","filterGetFeatureInfo","filterGetMap","filterSelectable","metadataURL","order","queryableActive","radio","tooltip","_links","newItem","nodeDrag","parentNode","getParentFromNodes","currentRoot","getParent","child","Injectable","DataTreeComponent","database","SelectionModel","dragging","expandDelay","validateDrop","dragNodeExpandOverWaitTimeMs","existingNode","nestedNodeMap","flatNode","FileFlatNode","flatNodeMap","observableOf","_","_nodeData","emitNode","createNode","createFolder","emitAllNodes","treeFlattener","MatTreeFlattener","transformer","_getLevel","_isExpandable","_getChildren","treeControl","FlatTreeControl","dataSource","MatTreeFlatDataSource","eventNodeUpdatedSubscription","updateNode","eventCreateNodeSubscription","createNewFolder","createNewNode","treeData","rebuildTreeForData","visibleNodes","addExpandedChildren","expanded","expansionModel","selected","findNodeSiblings","arr","subResult","handleDragStart","dataTransfer","setData","setDragImage","emptyItem","nativeElement","dragNode","collapse","handleDragOver","preventDefault","dragNodeExpandOverNode","isExpanded","dragNodeExpandOverTime","expand","offsetX","clientWidth","percentageY","offsetY","clientHeight","dragNodeExpandOverArea","handleDrop","toFlatNode","fromFlatNode","parentLvl_1","dataNodes","expandDescendants","handleDragEnd","nodeAct","getParentNode","currentLevel","currentNode","nodeUpdated","dataToChange","siblings","newFolder","newNode","onButtonClicked","button","changedData","nodeClicked","deleteChildren","dataToEmit","allRows","getAllChildren","apply","arguments","concat","__spread","createTranslateLoader","http","TranslateHttpLoader","providers","registerLocaleData","localeCa","localeEs","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","AngularHalModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","SitmunFrontendCoreModule","MaterialModule","TranslateModule","forRoot","loader","provide","TranslateLoader","useFactory","Éµ0","deps","HttpClient","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-edit-rendered',\r\n  templateUrl: './btn-edit-rendered.component.html',\r\n  styleUrls: ['./btn-edit-rendered.component.scss']\r\n})\r\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  btnClickedHandler($event) {\r\n    this.params.clicked(this.params.value);\r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.scss']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    let checked = !event.target.firstElementChild.checked;\r\n    let colId = this.params.column.colId;\r\n    this.params.value=checked;\r\n    this.params.api.undoRedoService.isFilling=true;\r\n    this.params.node.setDataValue(colId, checked);\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.scss'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-message',\r\n  templateUrl: './dialog-message.component.html',\r\n  styleUrls: ['./dialog-message.component.scss']\r\n})\r\nexport class DialogMessageComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  hideCancelButton : boolean=false;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  doAccept(){\r\n    this.dialogRef.close({event:'Accept'});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BtnEditRenderedComponent } from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.scss']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n\r\n  _eventRefreshSubscription: any;\r\n  _eventGetSelectedRowsSubscription: any;\r\n  _eventGetAllRowsSubscription: any;\r\n  _eventSaveAgGridStateSubscription: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  gridApi:any;\r\n  gridColumnApi:any;\r\n  statusColumn = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n  // We will save the id of edited cells and the number of editions done.\r\n  params:any; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable<boolean>;\r\n  @Input() eventGetSelectedRowsSubscription: Observable<boolean>;\r\n  @Input() eventGetAllRowsSubscription: Observable<boolean>;\r\n  @Input() eventSaveAgGridStateSubscription: Observable<boolean>;\r\n  @Input() eventAddItemsSubscription: Observable<boolean>;\r\n  @Input() frameworkComponents: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() id: any;\r\n  @Input() undoButton: boolean;\r\n  @Input() defaultColumnSorting: string;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() globalSearch: boolean;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<number>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<any[]>;\r\n  @Output() getAgGridState: EventEmitter<any[]>;\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public translate: TranslateService,) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        cellStyle: { backgroundColor: '#FFFFFF' },\r\n        suppressMenu: true,\r\n        resizable: true\r\n      },\r\n      columnTypes: {\r\n        dateColumn: {\r\n          filter: 'agDateColumnFilter',\r\n          filterParams: {\r\n            comparator(filterLocalDateAtMidnight, cellValue) {\r\n              const dateCellValue = new Date(cellValue);\r\n              const dateFilter = new Date(filterLocalDateAtMidnight);\r\n\r\n              if (dateCellValue.getTime() < dateFilter.getTime()) {\r\n                return -1;\r\n              } else if (dateCellValue.getTime() > dateFilter.getTime()) {\r\n                return 1;\r\n              } else {\r\n                return 0;\r\n              }\r\n            },\r\n          },\r\n          suppressMenu: true\r\n        }\r\n      },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.changesMap.clear();\r\n        this.changeCounter = 0;\r\n        this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventSaveAgGridStateSubscription) {\r\n      this._eventSaveAgGridStateSubscription = this.eventSaveAgGridStateSubscription.subscribe(() => {\r\n        this.saveAgGridState();\r\n      });\r\n    }\r\n\r\n    if (this.eventAddItemsSubscription) {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  firstDataRendered(): void {\r\n    if (localStorage.agGridState != undefined) {\r\n      let agGridState = JSON.parse(localStorage.agGridState)\r\n      if (agGridState.idAgGrid != undefined && agGridState.idAgGrid == this.id) {\r\n        this.gridApi.setFilterModel(agGridState.filterState);\r\n        this.gridColumnApi.setColumnState(agGridState.colState);\r\n        this.gridApi.setSortModel(agGridState.sortState);\r\n        this.searchValue = agGridState.valueSearchGeneric;\r\n        this.quickSearch();\r\n        this.removeAgGridState();\r\n      } else if (this.id != undefined) {\r\n        this.removeAgGridState();\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridReady(params): void {\r\n    if (this.singleSelection) { this.gridOptions.rowSelection = 'single' }\r\n    // if (this.nonEditable) {this.gridOptions.defaultColDef.editable = false}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.getElements();\r\n    console.log(this.columnDefs);\r\n    for (const col of this.columnDefs) {\r\n      if (col.field === 'status') {\r\n        console.log(\"status column true\");\r\n\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n    if(this.defaultColumnSorting){\r\n      const sortModel = [\r\n        {colId: this.defaultColumnSorting, sort: 'asc'}\r\n    ];\r\n    this.gridApi.setSortModel(sortModel);\r\n    }\r\n  }\r\n\r\n\r\n  areRowsSelected(): Boolean{\r\n    if(this.gridApi!=null && this.gridApi.getSelectedNodes().length > 0){\r\n      return true\r\n    }else{\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  emitSelectedRows(): void {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(): void {\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit(rowData);\r\n  }\r\n\r\n  saveAgGridState(): void {\r\n    let agGridState = {\r\n      idAgGrid: this.id,\r\n      colState: this.gridColumnApi.getColumnState(),\r\n      filterState: this.gridApi.getFilterModel(),\r\n      sortState: this.gridApi.getSortModel(),\r\n      valueSearchGeneric: this.searchValue\r\n    };\r\n\r\n    localStorage.setItem(\"agGridState\", JSON.stringify(agGridState));\r\n\r\n  }\r\n  removeAgGridState(): void {\r\n    localStorage.removeItem(\"agGridState\")\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String {\r\n    let header: Array<any> = [];\r\n    if (this.columnDefs.length == 0) { return '' };\r\n\r\n    let allColumnKeys = this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n      if (element.userProvidedColDef.headerName !== '') {\r\n        columnkeys.push(element.userProvidedColDef.field);\r\n        header.push(element.userProvidedColDef.headerName);\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void {\r\n    let columnkeys: Array<any> = [];\r\n    let customHeader: String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n      onlySelected: true,\r\n      columnKeys: columnkeys,\r\n      customHeader: customHeader,\r\n      skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void {\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n      .subscribe((items) => {\r\n        this.rowData = items;\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.gridApi.sizeColumnsToFit()\r\n        console.log(this.rowData);\r\n\r\n      });\r\n  }\r\n\r\n  addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n\r\n    newItems.forEach(item => {\r\n\r\n      if (item.id == undefined || (this.rowData.find(element => element.id === item.id)) == undefined) {\r\n        if (this.statusColumn) {\r\n          item.status = 'Pending creation'\r\n        }\r\n        itemsToAdd.push(item);\r\n        this.rowData.push(item);\r\n      }\r\n      else {\r\n        console.log(`Item with the ID ${item.id} already exists`)\r\n      }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n\r\n\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if (this.statusColumn) {\r\n      const selectedRows = selectedNodes.map(node => node.id);\r\n\r\n      for (const id of selectedRows) {\r\n        this.gridApi.getRowNode(id).data.status = 'Deleted';\r\n      }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(-1);\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    console.log(this.changeCounter);\r\n    if (this.changeCounter > 0) {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title = this.translate.instant('caution')\r\n      dialogRef.componentInstance.message = this.translate.instant('duplicateMessage')\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.event === 'Accept') {\r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map(node => node.data);\r\n      this.duplicate.emit(selectedData);\r\n    }\r\n  }\r\n\r\n\r\n  applyChanges(): void {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys()) {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.params.colDef.cellStyle = { backgroundColor: '#FFFFFF' };\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void {\r\n    this.gridApi.stopEditing(false);\r\n\r\n    while (this.changeCounter > 0) {\r\n      this.undo();\r\n    }\r\n\r\n    this.changesMap.clear();\r\n    //this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n\r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void {\r\n    this.deleteChanges();\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e) {\r\n    if (this.modificationChange) {\r\n      this.changeCounter++;\r\n      this.redoCounter = 0;\r\n      this.onCellValueChanged(e);\r\n      this.modificationChange = false;\r\n    }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void {\r\n    console.log(\"value Change\")\r\n    this.params = params;\r\n    if (this.changeCounter > this.previousChangeCounter)\r\n    // True if we have edited some cell or we have done a redo \r\n    {\r\n\r\n      if (params.oldValue !== params.value && !(params.oldValue == null && params.value === '')) {\r\n\r\n        if (!this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n        {\r\n          const addMap: Map<string, number> = new Map<string, number>();\r\n          addMap.set(params.colDef.field, 1)\r\n          this.changesMap.set(params.node.id, addMap);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'Pending creation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = 'Modified'\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (!this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n          }\r\n\r\n          else {\r\n            // We already had edited this cell, so we only increment number of changes of it on the map \r\n            const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n          }\r\n\r\n        }\r\n        this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n        this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n      }\r\n\r\n    }\r\n    else if (this.changeCounter < this.previousChangeCounter) { // True if we have done an undo\r\n      let currentChanges = -1;\r\n      if (this.changesMap.has(params.node.id)) { currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field); }\r\n\r\n      if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n        this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n        if (this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n          this.changesMap.delete(params.node.id);\r\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'Pending creation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = ''\r\n            }\r\n          };\r\n          // We paint it white\r\n          this.gridApi.redrawRows({ rowNodes: [row] });\r\n\r\n        }\r\n        else {\r\n          this.paintCells(params, this.changesMap);\r\n        }\r\n\r\n      }\r\n      else if (currentChanges > 1) // The cell isn't in his initial state yet\r\n      {                                 //We can't do else because we can be doing an undo without changes \r\n        this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n        this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n      }\r\n      this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else { // Control of modifications without changes\r\n      if (!(params.oldValue == null && params.value === '')) {\r\n        let newValue: string;\r\n        if (params.value == null) { newValue = '' }\r\n        else { newValue = params.value.toString() }\r\n\r\n        if ((params.oldValue != undefined && params.oldValue != null && params.oldValue.toString() !== newValue.toString())\r\n          || ((params.oldValue == undefined || params.oldValue == null) && newValue != null)) {\r\n\r\n          this.modificationChange = true;\r\n          if (params.colDef.cellRenderer == \"btnCheckboxRendererComponent\") {\r\n            var undoRedoActions = {\r\n              cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n            };\r\n            this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n            this.gridApi.undoRedoService.isFilling = false;\r\n            this.onCellEditingStopped(params);\r\n          }\r\n        }\r\n        else { this.modificationWithoutChanges(params) }\r\n\r\n      }\r\n      else { this.modificationWithoutChanges(params) }\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if (this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any, changesMap: Map<number, Map<string, number>>,) {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    this.changeCellStyleColumns(params, changesMap, '#E8F1DE');\r\n    this.gridApi.redrawRows({ rowNodes: [row] });\r\n    this.changeCellStyleColumns(params, changesMap, '#FFFFFF');\r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string) {\r\n\r\n    for (const key of changesMap.get(params.node.id).keys()) {\r\n      const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n      this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = { backgroundColor: color };\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  _GetAllsTable:  Array<() => Observable<any>>;\r\n  _columnDefsTable: Array<any[]>;\r\n  _singleSelectionTable: Array<boolean>;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-grid',\r\n  templateUrl: './dialog-grid.component.html',\r\n  styleUrls: ['./dialog-grid.component.scss']\r\n})\r\nexport class DialogGridComponent implements OnInit {\r\n\r\n  title: string;\r\n  getAllRows: Subject<boolean> = new Subject <boolean>();\r\n  private _addButtonClickedSubscription: any;\r\n  tablesReceivedCounter: number;\r\n  allRowsReceived: Array<any[]> = [];\r\n\r\n  //Inputs\r\n  themeGrid: any;\r\n  getAllsTable: Array<() => Observable<any>>;\r\n  columnDefsTable: Array<any[]>;\r\n  singleSelectionTable: Array<boolean>;\r\n  titlesTable: Array<string>;\r\n  addButtonClickedSubscription: Observable <boolean> ;\r\n  nonEditable: boolean;\r\n\r\n  //Outputs\r\n  @Output() joinTables : EventEmitter<Array<any[]>>;\r\n\r\n  \r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\r\n    \r\n    this.joinTables = new EventEmitter();\r\n    // this.nonEditable = true;\r\n    this.tablesReceivedCounter = 0;\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.addButtonClickedSubscription) {\r\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\r\n        this.getAllSelectedRows();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getAllSelectedRows() {\r\n    this.getAllRows.next(true);\r\n  }\r\n\r\n  joinRowsReceived(data: any[])\r\n  {\r\n      this.allRowsReceived.push(data);\r\n      this.tablesReceivedCounter++;\r\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\r\n      {\r\n        this.doAdd(this.allRowsReceived);\r\n        console.log(this.allRowsReceived);\r\n      }\r\n  }\r\n\r\n  doAdd(rowsToAdd){\r\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'; \r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-form',\r\n  templateUrl: './dialog-form.component.html',\r\n  styleUrls: ['./dialog-form.component.scss']\r\n})\r\nexport class DialogFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  HTMLReceived;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DialogFormComponent>,\r\n    public dialog: MatDialog,\r\n    private translate: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  doAdd(){\r\n    if(this.form.valid) { this.dialogRef.close({event:'Add'}); }\r\n    else {\r\n       const dialogRef = this.dialog.open(DialogMessageComponent);\r\n       dialogRef.componentInstance.title = this.translate.instant(\"atention\")\r\n       dialogRef.componentInstance.message = this.translate.instant(\"requiredFieldMessage\")\r\n       dialogRef.componentInstance.hideCancelButton = true;\r\n       dialogRef.afterClosed().subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output,ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { forEach } from 'jszip';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n  active: any\r\n  cartographyId: any\r\n  cartographyName: any\r\n  datasetURL: any\r\n  description: any\r\n  filterGetFeatureInfo: any\r\n  filterGetMap: any\r\n  filterSelectable: any\r\n  isFolder: any\r\n  metadataURL: any\r\n  order: any\r\n  parent: any\r\n  queryableActive: any\r\n  radio: any\r\n  tooltip: any\r\n  _links: any\r\n  status: any\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string,\r\n    public status: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): any { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number): any {\r\n    var map = {};\r\n    if(arrayTreeNodes.length===0)\r\n    {\r\n      let root = {\r\n        isFolder:true,\r\n        name:'Root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        children: []\r\n      }\r\n      map['root']=root;\r\n    }\r\n    else{\r\n      arrayTreeNodes.forEach((treeNode) => {\r\n        var obj = treeNode;\r\n        obj.children = [];\r\n        obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n  \r\n        if(!map[obj.id]) {map[obj.id] = obj;}\r\n        else{\r\n          let previousChildren= map[obj.id].children\r\n          map[obj.id] = obj;\r\n          map[obj.id].children=previousChildren\r\n        }\r\n        var parent = obj.parent || 'root';\r\n        if (!map[parent]) {\r\n          map[parent] = {\r\n            children: []\r\n          };\r\n        }\r\n        map[parent].children.push(obj);\r\n      });\r\n      map['root'].type='folder';\r\n      map['root'].name='Root';\r\n      map['root'].isFolder=true;\r\n      map['root'].isRoot=true;\r\n    }\r\n\r\n\r\n    return map['root'];\r\n  }\r\n  \r\n\r\n  deleteItem(node: FileNode) {\r\n    this.deleteNode(this.data.children, node);\r\n    this.dataChange.next(this.data);\r\n  }\r\n\r\n  deleteNode(nodes: FileNode[], nodeToDelete: FileNode) {\r\n    const index = nodes.indexOf(nodeToDelete, 0);\r\n    if (index > -1) {\r\n      nodes.splice(index, 1);\r\n    } else {\r\n      nodes.forEach(node => {\r\n        if (node.children && node.children.length > 0) {\r\n          this.deleteNode(node.children, nodeToDelete);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  copyPasteItem(from: FileNode, to: FileNode): FileNode {\r\n    const newItem = this.insertItem(to, from);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemAbove(from: FileNode, to: FileNode): FileNode {\r\n    const newItem = this.insertItemAbove(to, from);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemBelow(from: FileNode, to: FileNode): FileNode {\r\n    const newItem = this.insertItemBelow(to, from);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  \r\n  getNewItem(node:FileNode){\r\n    const newItem = {\r\n      name: node.name,\r\n      children: node.children,\r\n      type: node.type,\r\n      id: node.id, \r\n      active: node.active,\r\n      cartographyId: node.cartographyId,\r\n      cartographyName: node.cartographyName,\r\n      datasetURL: node.datasetURL,\r\n      description: node.description,\r\n      filterGetFeatureInfo: node.filterGetFeatureInfo,\r\n      filterGetMap: node.filterGetMap,\r\n      filterSelectable: node.filterSelectable,\r\n      isFolder: node.isFolder,\r\n      metadataURL: node.metadataURL,\r\n      order: node.order,\r\n      queryableActive: node.queryableActive,\r\n      radio: node.radio,\r\n      tooltip: node.tooltip,\r\n      _links: node._links } as FileNode;\r\n\r\n    return newItem;\r\n  }\r\n\r\n  insertItem(parent: FileNode, node: FileNode): FileNode {\r\n    if (!parent.children) {\r\n      parent.children = [];\r\n    }\r\n    const newItem = this.getNewItem(node)\r\n    newItem.parent = parent==null || parent.id==undefined?null:parent.id;\r\n\r\n    parent.children.push(newItem);\r\n    this.dataChange.next(this.data);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemAbove(node: FileNode, nodeDrag: FileNode): FileNode {\r\n    const parentNode = this.getParentFromNodes(node);\r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\r\n    } else {\r\n      this.data.children.splice(this.data.children.indexOf(node), 0, newItem);\r\n    }\r\n    this.dataChange.next(this.data);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemBelow(node: FileNode, nodeDrag: FileNode): FileNode {\r\n    const parentNode = this.getParentFromNodes(node);\r\n   \r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\r\n    } else {\r\n      this.data.children.splice(this.data.children.indexOf(node) + 1, 0, newItem);\r\n    }\r\n    this.dataChange.next(this.data);\r\n    return newItem;\r\n  }\r\n\r\n  \r\n  getParentFromNodes(node: FileNode): FileNode {\r\n    for (let i = 0; i < this.data.children.length; ++i) {\r\n      const currentRoot = this.data.children[i];\r\n      const parent = this.getParent(currentRoot, node);\r\n      if (parent != null) {\r\n        return parent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  getParent(currentRoot: FileNode, node: FileNode): FileNode {\r\n    if (currentRoot.children && currentRoot.children.length > 0) {\r\n      for (let i = 0; i < currentRoot.children.length; ++i) {\r\n        const child = currentRoot.children[i];\r\n        if (child === node) {\r\n          return currentRoot;\r\n        } else if (child.children && child.children.length > 0) {\r\n          const parent = this.getParent(child, node);\r\n          if (parent != null) {\r\n            return parent;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  @Input() eventRefreshSubscription: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  private _eventRefreshSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n\r\n\r\n  /* Drag and drop */\r\n  dragNode: any;\r\n  dragNodeExpandOverWaitTimeMs = 1500;\r\n  dragNodeExpandOverNode: any;\r\n  dragNodeExpandOverTime: number;\r\n  dragNodeExpandOverArea: string;\r\n  @ViewChild('emptyItem') emptyItem: ElementRef;\r\n\r\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n    flatNodeMap = new Map<FileFlatNode, FileNode>();\r\n\r\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n    nestedNodeMap = new Map<FileNode, FileFlatNode>();\r\n\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    \r\n    this.getElements();\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.name === node.name\r\n      ? existingNode\r\n      : new FileFlatNode((node.children && node.children.length > 0),node.name,level,node.type,node.id,node.status);\r\n\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  handleDragStart(event, node) {\r\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\r\n    event.dataTransfer.setData('foo', 'bar');\r\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\r\n    this.dragNode = node;\r\n    this.treeControl.collapse(node);\r\n  }\r\n\r\n  handleDragOver(event, node) {\r\n    event.preventDefault();\r\n\r\n    // Handle node expand\r\n    if (node === this.dragNodeExpandOverNode) {\r\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\r\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\r\n          this.treeControl.expand(node);\r\n        }\r\n      }\r\n    } else {\r\n      this.dragNodeExpandOverNode = node;\r\n      this.dragNodeExpandOverTime = new Date().getTime();\r\n    }\r\n\r\n    // Handle drag area\r\n    const percentageX = event.offsetX / event.target.clientWidth;\r\n    const percentageY = event.offsetY / event.target.clientHeight;\r\n    if (percentageY < 0.25) {\r\n      this.dragNodeExpandOverArea = 'above';\r\n    } else if (percentageY > 0.75) {\r\n      this.dragNodeExpandOverArea = 'below';\r\n    } else {\r\n      this.dragNodeExpandOverArea = 'center';\r\n    }\r\n  }\r\n\r\n  handleDrop(event, node) {\r\n    event.preventDefault();\r\n    let toFlatNode=this.flatNodeMap.get(node);\r\n    let fromFlatNode=this.flatNodeMap.get(this.dragNode)\r\n    if (node !== this.dragNode && (this.dragNodeExpandOverArea !== 'center' || (this.dragNodeExpandOverArea === 'center' && toFlatNode.isFolder))) {\r\n      let newItem: FileNode;\r\n\r\n      if (this.dragNodeExpandOverArea === 'above') {\r\n        newItem = this.database.copyPasteItemAbove(fromFlatNode,toFlatNode);\r\n      } else if (this.dragNodeExpandOverArea === 'below') {\r\n        newItem = this.database.copyPasteItemBelow(fromFlatNode,toFlatNode);\r\n      } else {\r\n        newItem = this.database.copyPasteItem(fromFlatNode, toFlatNode);\r\n      }\r\n      let parentLvl=this.treeControl.dataNodes.find((n) => n.id === fromFlatNode.id).level;\r\n      fromFlatNode.children.forEach(child=>{\r\n        this.treeControl.dataNodes.find((n) => n.id === child.id).level=parentLvl+1\r\n      });\r\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\r\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\r\n    }\r\n   \r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n  rebuildTreeForData(data: any[]) {\r\n    //this.dataSource.data = data;\r\n\r\n    this.dataSource.data = [];\r\n    this.dataSource.data = data;\r\n    this.treeControl.expansionModel.selected.forEach((nodeAct) => {\r\n      const node = this.treeControl.dataNodes.find((n) => n.id === nodeAct.id);\r\n      this.treeControl.expand(node);\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {dataToChange[0].children.push(newFolder)}\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newNode.parent === null) {dataToChange[0].children.push(newNode)}\r\n    else{\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    siblings[index].children.push(newNode)\r\n    }\r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    let nodeClicked= siblings.find(node => node.id === id);\r\n    if(button ==='edit')  {this.emitNode.emit(nodeClicked)}\r\n    else if(button === 'newFolder') {this.createFolder.emit(nodeClicked)}\r\n    else if(button === 'newNode') {this.createNode.emit( nodeClicked)}\r\n    else if(button === 'delete') {\r\n      // let children= this.getAllChildren(nodeClicked.children)\r\n      // children.forEach(children => {\r\n      //   children.status='Deleted';\r\n      // });\r\n      this.deleteChildren(nodeClicked.children);\r\n      // nodeClicked.children=children\r\n      nodeClicked.status='Deleted'\r\n      \r\n      this.rebuildTreeForData(changedData);\r\n    }\r\n\r\n  }\r\n\r\n  emitAllRows()\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.emitAllNodes.emit(allRows);\r\n  }\r\n\r\n  getAllChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        subResult = this.getAllChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n\r\n  deleteChildren(arr)\r\n  {\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        this.deleteChildren(item.children);\r\n      }\r\n      item.status='Deleted'\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { SitmunFrontendCoreModule } from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule,\r\n    SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"]}