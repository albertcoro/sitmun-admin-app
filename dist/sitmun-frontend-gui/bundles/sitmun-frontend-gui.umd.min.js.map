{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-translation/dialog-translation.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-graph/datagraph.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","BtnEditRenderedComponent","prototype","agInit","params","this","refresh","btnClickedHandler","$event","clicked","getParams","ngOnDestroy","Component","args","selector","template","BtnCheckboxRenderedComponent","invokeParentMethod","context","componentParent","methodFromParent","node","rowIndex","colDef","headerName","btnCheckedHandler","event","editable","checked","target","firstElementChild","colId","column","api","undoRedoService","isFilling","setDataValue","preventDefault","BtnCheckboxFilterComponent","valueGetter","filterParams","suppressFilterButton","isFilterActive","text","doesFilterPass","_this","toLowerCase","split","every","filterWord","toString","indexOf","getModel","setModel","model","onChange","newValue","parentFilterInstance","instance","onFloatingFilterChanged","onParentModelChanged","parentModel","currentValue","filter","host","class","ViewChild","read","ViewContainerRef","DialogMessageComponent","dialogRef","ngOnInit","doAccept","close","closeDialog","MatDialogRef","DataGridComponent","dialog","translate","elRef","AllCommunityModules","statusColumn","someColumnIsEditable","Map","modificationChange","undoNoChanges","someStatusHasChangedToDelete","someStatusHasChangedToRegister","frameworkComponents","btnEditRendererComponent","btnCheckboxRendererComponent","btnCheckboxFilterComponent","components","datePicker","getDatePicker","remove","EventEmitter","load","new","add","discardChanges","sendChanges","getSelectedRows","duplicate","getAllRows","gridModified","changeCounter","previousChangeCounter","redoCounter","gridOptions","defaultColDef","sortable","flex","nonEditable","suppressMenu","resizable","cellStyle","changesMap","has","id","get","field","background-color","rowSelection","singleClickEdit","localeTextFunc","key","defaultValue","data","instant","eventRefreshSubscription","_eventRefreshSubscription","subscribe","clear","getElements","eventGetSelectedRowsSubscription","_eventGetSelectedRowsSubscription","emitSelectedRows","eventGetAllRowsSubscription","_eventGetAllRowsSubscription","emitAllRows","eventSaveAgGridStateSubscription","_eventSaveAgGridStateSubscription","saveAgGridState","eventModifyStatusOfSelectedCells","_eventModifyStatusOfSelectedCells","status","modifyStatusSelected","eventAddItemsSubscription","items","addItems","eventReplaceAllItemsSubscription","replaceAllItems","firstDataRendered","undefined","localStorage","agGridState","JSON","parse","idAgGrid","gridApi","setFilterModel","filterState","gridColumnApi","setColumnState","colState","setSortModel","sortState","searchValue","valueSearchGeneric","quickSearch","removeAgGridState","onGridReady","singleSelection","columnApi","_b","columnDefs","_c","col","console","log","defaultColumnSorting","Array","isArray","sortModel_1","forEach","element","sort","sortModel","changeHeight","defaultHeight","Datepicker","init","eInput","document","createElement","classList","style","height","$","datepicker","dateFormat","getGui","afterGuiAttached","focus","select","getValue","destroy","isPopup","areRowsSelected","getSelectedNodes","selectedData","map","emit","getAllCurrentData","rowData","forEachNode","newStatus","newStatusRegister","selectedNodes","selected","redrawRows","getColumnState","getFilterModel","getSortModel","setItem","stringify","removeItem","getColumnKeysAndHeaders","columnkeys","header","getAllDisplayedColumns","userProvidedColDef","join","exportData","onlySelected","columnKeys","customHeader","skipHeader","exportDataAsCsv","setQuickFilter","getAll","allNewElements","newItems","condition","addFieldRestriction","currentData","checkElementAllowedToAdd","setRowData","setSize","allColumnIds","columns","getAllColumns","autoSizeColumns","grid","availableWidth","gridPanel","eBodyViewport","clientWidth","columnController","getWidthOfColsInList","sizeColumnsToFit","itemsToAdd","item","newItem","updateRowData","finalAddition","data_1","data_1_1","canAdd","condition_1","e_3","condition_1_1","currentCondition","fieldRestrictionWithDifferentName","find","pixels","getDisplayedRowCount","nativeElement","parentElement","removeData","stopEditing","selectedRows","selectedRows_1","selectedRows_1_1","getRowNode","refreshCells","deselectAll","loadDataButton","newData","onAddButtonClicked","onDuplicateButtonClicked","open","componentInstance","title","message","afterClosed","result","applyChanges","itemsChanged","keys","deleteChanges","newElementsActived","undo","discardNonReverseStatus","rowsWithStatusModified_1","newRegister","onFilterModified","undoCellEditing","redo","redoCellEditing","onCellEditingStopped","onCellValueChanged","oldValue","currentChanges","set","addMap","paintCells","delete","size","row","getDisplayedRowAtIndex","rowNodes","cellRenderer","undoRedoActions","cellValueChanges","pushActionsToUndoStack","modificationWithoutChanges","getColumnIndexByColId","findIndex","getColId","MatDialog","TranslateService","ElementRef","Input","Output","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","MatFormFieldModule","DialogGridComponent","Subject","joinTables","tablesReceivedCounter","addButtonClickedSubscription","_addButtonClickedSubscription","getAllSelectedRows","joinRowsReceived","allRowsReceived","getAllsTable","doAdd","rowsToAdd","DialogFormComponent","form","valid","hideCancelButton","expandable","name","level","type","FileDatabase","BehaviorSubject","defineProperty","dataChange","initialize","dataObj","buildFileTree","arrayTreeNodes","isFolder","isRoot","order","children","treeNode","obj","parent","previousChildren","deleteItem","changedData","deleteNode","nodes","nodeToDelete","index","splice","setOrder","copyPasteItem","from","to","insertItem","copyPasteItemAbove","insertItemAbove","copyPasteItemBelow","insertItemBelow","getNewItem","active","cartographyId","cartographyName","datasetURL","description","filterGetFeatureInfo","filterGetMap","filterSelectable","metadataURL","queryableActive","radio","tooltip","_links","nodeDrag","parentNode","getParentFromNodes","currentRoot","getParent","child","Injectable","DataTreeComponent","database","SelectionModel","dragging","expandDelay","validateDrop","dragNodeExpandOverWaitTimeMs","existingNode","nestedNodeMap","flatNode","FileFlatNode","flatNodeMap","observableOf","_","_nodeData","emitNode","createNode","createFolder","emitAllNodes","loadButtonClicked","treeFlattener","MatTreeFlattener","transformer","_getLevel","_isExpandable","_getChildren","treeControl","FlatTreeControl","dataSource","MatTreeFlatDataSource","eventNodeUpdatedSubscription","updateNode","eventCreateNodeSubscription","createNewFolder","createNewNode","loadDataButtonClicked","dataToEmit","allRows","getAllChildren","treeData","rebuildTreeForData","visibleNodes","addExpandedChildren","expanded","expansionModel","findNodeSiblings","arr","subResult","handleDragStart","dataTransfer","setData","setDragImage","emptyItem","dragNode","collapse","handleDragOver","dragNodeExpandOverNode","isExpanded","Date","getTime","dragNodeExpandOverTime","expand","offsetX","percentageY","offsetY","clientHeight","dragNodeExpandOverArea","handleDrop","toFlatNode","fromFlatNode","nodeAct","parentLvl_1","dataNodes","expandDescendants","handleDragEnd","sortByOrder","a","b","getParentNode","currentLevel","currentNode","nodeUpdated","dataToChange","siblings","newFolder","newNode","onButtonClicked","button","nodeClicked","deleteChildren","apply","arguments","concat","__spread","providers","DialogTranslationComponent","matIconRegistry","domSanitizer","FormGroup","loading","initializeDialog","languagesAvailables","registerIcon","shortname","initializeForm","elementShortname","addSvgIcon","getIconName","bypassSecurityTrustResourceUrl","currentValueOnMap","translationsMap","valueToPutOnForm","translation","translationForm","addControl","FormControl","language","_a","MatIconRegistry","DomSanitizer","DatagraphComponent","top","bottom","left","right","createBarChart","updateBarChart","ngOnChanges","chart","chartContainer","width","offsetWidth","margin","offsetHeight","svg","d3.select","append","attr","barGroups","selectAll","enter","xDomain","d","yDomain","d3.max","xScale","d3.scaleBand","padding","domain","rangeRound","yScale","d3.scaleLinear","range","bandwidth","xAxis","d3.axisBottom","yAxis","d3.axisLeft","transition","update","exit","delay","createTranslateLoader","http","TranslateHttpLoader","static","registerLocaleData","localeCa","localeEs","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","AngularHalModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","SitmunFrontendCoreModule","MaterialModule","TranslateModule","forRoot","loader","provide","TranslateLoader","useFactory","ɵ0","deps","HttpClient","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-edit-rendered',\r\n  templateUrl: './btn-edit-rendered.component.html',\r\n  styleUrls: ['./btn-edit-rendered.component.scss']\r\n})\r\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  btnClickedHandler($event) {\r\n    this.params.clicked(this.params.value);\r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.scss']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    if(this.params.colDef.editable){\r\n      let checked = !event.target.firstElementChild.checked;\r\n      let colId = this.params.column.colId;\r\n      this.params.value=checked;\r\n      this.params.api.undoRedoService.isFilling=true;\r\n      this.params.node.setDataValue(colId, checked);\r\n    }\r\n    else{\r\n      event.preventDefault();\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.scss'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-message',\r\n  templateUrl: './dialog-message.component.html',\r\n  styleUrls: ['./dialog-message.component.scss']\r\n})\r\nexport class DialogMessageComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  hideCancelButton : boolean=false;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  doAccept(){\r\n    this.dialogRef.close({event:'Accept'});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BtnEditRenderedComponent } from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\nimport { forEach } from 'jszip';\r\ndeclare let $: any;\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.scss']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n\r\n  _eventRefreshSubscription: any;\r\n  _eventGetSelectedRowsSubscription: any;\r\n  _eventGetAllRowsSubscription: any;\r\n  _eventSaveAgGridStateSubscription: any;\r\n  _eventModifyStatusOfSelectedCells: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  gridApi: any;\r\n  gridColumnApi: any;\r\n  statusColumn = false;\r\n  someColumnIsEditable = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n  // We will save the id of edited cells and the number of editions done.\r\n  params: any; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n  someStatusHasChangedToDelete = false;\r\n  someStatusHasChangedToRegister = false;\r\n\r\n  public domLayout;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable<boolean>;\r\n  @Input() eventGetSelectedRowsSubscription: Observable<boolean>;\r\n  @Input() eventGetAllRowsSubscription: Observable<string>;\r\n  @Input() eventSaveAgGridStateSubscription: Observable<boolean>;\r\n  @Input() eventModifyStatusOfSelectedCells: Observable<string>;\r\n  @Input() eventAddItemsSubscription: Observable<boolean>;\r\n  @Input() eventReplaceAllItemsSubscription: Observable<boolean>;\r\n  @Input() frameworkComponents: any;\r\n  @Input() components: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() discardNonReverseStatus: boolean;\r\n  @Input() id: any;\r\n  @Input() undoButton: boolean;\r\n  @Input() defaultColumnSorting: string;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() loadButton: boolean = false;\r\n  @Input() loadButtonDisabled: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() registerButton: boolean;\r\n  @Input() newStatusRegister: string;\r\n  @Input() globalSearch: boolean;\r\n  @Input() changeHeightButton: boolean;\r\n  @Input() heightButtonValueDefault: string;\r\n  @Input() defaultHeight: any;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n  @Input() addFieldRestriction: any;\r\n  @Input() allNewElements: any;\r\n  @Input() currentData: Array<any> = null;\r\n  @Input() fieldRestrictionWithDifferentName: string;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() load: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<any[]>;\r\n  @Output() discardChanges: EventEmitter<any[]>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<{ data: any[], event: string }>;\r\n  @Output() getAgGridState: EventEmitter<any[]>;\r\n  @Output() gridModified: EventEmitter<boolean>;\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public translate: TranslateService,\r\n    private elRef: ElementRef) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.components = {\r\n      datePicker: this.getDatePicker()\r\n    };\r\n\r\n\r\n    this.remove = new EventEmitter();\r\n    this.load = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.discardChanges = new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.gridModified = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        suppressMenu: true,\r\n        resizable: true,\r\n        cellStyle: (params) => {\r\n          if (params.value && params.colDef.editable) {\r\n            if (this.changesMap.has(params.node.id) && this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n              return { 'background-color': '#E8F1DE' };\r\n            }\r\n            else {\r\n              return { 'background-color': 'white' };\r\n            }\r\n          }\r\n          else {\r\n            return { 'background-color': 'white' };\r\n          }\r\n        },\r\n      },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.changesMap.clear();\r\n        this.someStatusHasChangedToDelete = false;\r\n        this.someStatusHasChangedToRegister = false;\r\n        this.changeCounter = 0;\r\n        this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe((event: string) => {\r\n        this.emitAllRows(event);\r\n      });\r\n    }\r\n\r\n    if (this.eventSaveAgGridStateSubscription) {\r\n      this._eventSaveAgGridStateSubscription = this.eventSaveAgGridStateSubscription.subscribe(() => {\r\n        this.saveAgGridState();\r\n      });\r\n    }\r\n\r\n    if (this.eventModifyStatusOfSelectedCells) {\r\n      this._eventModifyStatusOfSelectedCells = this.eventModifyStatusOfSelectedCells.subscribe((status: string) => {\r\n        this.modifyStatusSelected(status);\r\n      });\r\n    }\r\n\r\n    if (this.eventAddItemsSubscription) {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventReplaceAllItemsSubscription) {\r\n      this.eventReplaceAllItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.replaceAllItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  firstDataRendered(): void {\r\n    if (localStorage.agGridState != undefined) {\r\n      let agGridState = JSON.parse(localStorage.agGridState)\r\n      if (agGridState.idAgGrid != undefined && agGridState.idAgGrid == this.id) {\r\n        this.gridApi.setFilterModel(agGridState.filterState);\r\n        this.gridColumnApi.setColumnState(agGridState.colState);\r\n        this.gridApi.setSortModel(agGridState.sortState);\r\n        this.searchValue = agGridState.valueSearchGeneric;\r\n        this.quickSearch();\r\n        this.removeAgGridState();\r\n      } else if (this.id != undefined) {\r\n        this.removeAgGridState();\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridReady(params): void {\r\n    if (this.singleSelection) { this.gridOptions.rowSelection = 'single' }\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    for (const col of this.columnDefs) {\r\n      if (!this.someColumnIsEditable && col.editable) { this.someColumnIsEditable = true }\r\n      if (col.field === 'status') {\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n    this.getElements();\r\n    console.log(this.columnDefs);\r\n    if (this.defaultColumnSorting) {\r\n      if (!Array.isArray(this.defaultColumnSorting)) {\r\n        const sortModel = [\r\n          { colId: this.defaultColumnSorting, sort: 'asc' }\r\n        ];\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n      else {\r\n        let sortModel = [];\r\n        this.defaultColumnSorting.forEach(element => {\r\n          sortModel.push({ colId: element, sort: 'asc' })\r\n        });\r\n        this.gridApi.setSortModel(sortModel);\r\n      }\r\n\r\n    }\r\n      this.changeHeight(this.defaultHeight)\r\n  }\r\n\r\n\r\n  getDatePicker() {\r\n    function Datepicker() { }\r\n    Datepicker.prototype.init = function (params) {\r\n      this.eInput = document.createElement('input');\r\n      this.eInput.value = params.value;\r\n      this.eInput.classList.add('ag-input');\r\n      this.eInput.style.height = '100%';\r\n      $(this.eInput).datepicker({ dateFormat: 'mm/dd/yy' });\r\n    };\r\n    Datepicker.prototype.getGui = function () {\r\n      return this.eInput;\r\n    };\r\n    Datepicker.prototype.afterGuiAttached = function () {\r\n      this.eInput.focus();\r\n      this.eInput.select();\r\n    };\r\n    Datepicker.prototype.getValue = function () {\r\n      return this.eInput.value;\r\n    };\r\n    Datepicker.prototype.destroy = function () { };\r\n    Datepicker.prototype.isPopup = function () {\r\n      return false;\r\n    };\r\n    return Datepicker;\r\n  }\r\n\r\n  areRowsSelected(): Boolean {\r\n    return (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0) ? true : false;\r\n  }\r\n\r\n\r\n  emitSelectedRows(): void {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(event: string): void {\r\n    // let rowData = [];\r\n    // this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit({ data: this.getAllCurrentData(), event: event });\r\n  }\r\n\r\n  private getAllCurrentData(): Array<any> {\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    return rowData;\r\n  }\r\n\r\n  modifyStatusSelected(status?: string): void {\r\n    let newStatus = status ? status : this.newStatusRegister;\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    if (selectedNodes.length > 0) { this.someStatusHasChangedToRegister = true; }\r\n    selectedNodes.map(node => {\r\n      node.data.status = newStatus;\r\n      node.selected = false;\r\n    });\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n  saveAgGridState(): void {\r\n    let agGridState = {\r\n      idAgGrid: this.id,\r\n      colState: this.gridColumnApi.getColumnState(),\r\n      filterState: this.gridApi.getFilterModel(),\r\n      sortState: this.gridApi.getSortModel(),\r\n      valueSearchGeneric: this.searchValue\r\n    };\r\n\r\n    localStorage.setItem(\"agGridState\", JSON.stringify(agGridState));\r\n\r\n  }\r\n  removeAgGridState(): void {\r\n    localStorage.removeItem(\"agGridState\")\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String {\r\n    let header: Array<any> = [];\r\n    if (this.columnDefs.length == 0) { return '' };\r\n\r\n    let allColumnKeys = this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n      if (element.userProvidedColDef.headerName !== '') {\r\n        columnkeys.push(element.userProvidedColDef.field);\r\n        header.push(element.userProvidedColDef.headerName);\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void {\r\n    let columnkeys: Array<any> = [];\r\n    let customHeader: String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n      onlySelected: true,\r\n      columnKeys: columnkeys,\r\n      customHeader: customHeader,\r\n      skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void {\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n      .subscribe((items) => {\r\n        let status = this.allNewElements ? 'pendingCreation' : 'statusOK'\r\n        let newItems = [];\r\n        let condition = (this.addFieldRestriction) ? this.addFieldRestriction : 'id';\r\n        items.forEach(element => {\r\n          if (this.statusColumn) {\r\n            if (element.status != \"notAvailable\" && element.status != \"pendingCreation\" && element.status != \"pendingRegistration\" && element.status != \"unregisteredLayer\") {\r\n              element.status = status\r\n            }\r\n            if (this.allNewElements) { element.new = true; }\r\n          }\r\n          if (this.currentData) {\r\n            if (this.checkElementAllowedToAdd(condition, element, this.currentData)) {\r\n              newItems.push(element);\r\n            }\r\n          }\r\n\r\n        });\r\n\r\n        // if(this.statusColumn){\r\n        //   let status = this.allNewElements?'pendingCreation':'statusOK'\r\n        //   items.forEach(element => {\r\n        //     if(element.status != \"notAvailable\" && element.status != \"pendingCreation\" && element.status != \"pendingRegistration\" && element.status != \"unregisteredLayer\"){\r\n        //       element.status=status\r\n        //     }\r\n        //     if(this.allNewElements) { element.new = true; }\r\n        //   });\r\n        // }\r\n        this.rowData = this.currentData ? newItems : items;\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.setSize()\r\n        // this.gridApi.sizeColumnsToFit()\r\n        console.log(this.rowData);\r\n\r\n      });\r\n  }\r\n\r\n  setSize() {\r\n\r\n    var allColumnIds = [];\r\n    let columns = this.gridOptions.columnApi.getAllColumns();\r\n    columns.forEach(function (column) {\r\n      allColumnIds.push(column.colId);\r\n    });\r\n\r\n    this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\r\n\r\n    let grid = this.gridOptions.api\r\n    let availableWidth = grid.gridPanel.eBodyViewport.clientWidth;\r\n\r\n    let usedWidth = grid.gridPanel.columnController.getWidthOfColsInList(columns);\r\n\r\n    if (usedWidth < availableWidth) {\r\n      grid.sizeColumnsToFit();\r\n    }\r\n\r\n  }\r\n\r\n  replaceAllItems(newItems: any[]):void {\r\n    this.rowData = [];\r\n    this.addItems(newItems);\r\n  }\r\n\r\n  addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n    let condition = (this.addFieldRestriction) ? this.addFieldRestriction : 'id';\r\n\r\n\r\n    newItems.forEach(item => {\r\n\r\n      if (this.checkElementAllowedToAdd(condition, item, this.rowData)) {\r\n        if (this.statusColumn) {\r\n          item.status = 'pendingCreation'\r\n          item.newItem = true;\r\n        }\r\n        itemsToAdd.push(item);\r\n        this.rowData.push(item);\r\n      }\r\n      else {\r\n        console.log(`Item already exists`)\r\n      }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n  private checkElementAllowedToAdd(condition, item, data) {\r\n\r\n    let finalAddition = true;\r\n\r\n    if (Array.isArray(condition)) {\r\n\r\n      for (let element of data) {\r\n        let canAdd = false;\r\n\r\n        for (let currentCondition of condition) {\r\n          if (element[currentCondition] != item[currentCondition]) {\r\n            canAdd = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!canAdd) {\r\n          finalAddition = false;\r\n          break;\r\n        }\r\n      }\r\n      return finalAddition;\r\n\r\n    }\r\n    else {\r\n      if (this.fieldRestrictionWithDifferentName) {\r\n        return (item[condition] == undefined || (data.find(element => element[this.fieldRestrictionWithDifferentName] == item[condition])) == undefined)\r\n      }\r\n      return (item[condition] == undefined || (data.find(element => element[condition] == item[condition])) == undefined)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  changeHeight(value) {\r\n\r\n      // if(value == \"max\"){\r\n      //   this.gridApi.setDomLayout(\"autoHeight\");\r\n      //   let pixels = `${document.querySelector(\"#myGrid\").scrollHeight}px`;\r\n      //   this.elRef.nativeElement.parentElement.style.height = pixels;\r\n      //   this.gridApi.redrawRows();\r\n      // }\r\n      // else{\r\n        // this.gridApi.setDomLayout(\"\"); // Needed if we have set dom to autoHeight\r\n\r\n        if(value != undefined && value != 'default' ){\r\n          let pixels = \"\";\r\n          if (value === '10') {\r\n            pixels = ((10*28)+100)+\"px\"\r\n          } else if (value === '20') {\r\n            pixels =  ((20*28)+100)+\"px\"\r\n          } else if (value === '50') {\r\n          } else if (value === '25') {\r\n            pixels =  ((25*28)+100)+\"px\"\r\n          } else if (value === '50') {\r\n            pixels =  ((50*28)+100)+\"px\"\r\n          } else if (value === '100') {\r\n            pixels = ((100*28)+100)+\"px\"\r\n          }\r\n          else{\r\n            pixels = ((this.gridApi.getDisplayedRowCount()*28)+100)+\"px\"\r\n          }\r\n          \r\n          this.elRef.nativeElement.parentElement.style.height = pixels;\r\n        }else{\r\n          this.elRef.nativeElement.parentElement.style.height = ((10*28)+100)+\"px\";\r\n        }\r\n\r\n\r\n      \r\n  }\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if (this.statusColumn) {\r\n      const selectedRows = selectedNodes.map(node => node.id);\r\n      if (selectedRows.length > 0) { this.someStatusHasChangedToDelete = true; }\r\n      for (const id of selectedRows) {\r\n        this.gridApi.getRowNode(id).data.status = 'pendingDelete';\r\n      }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  loadDataButton():void{\r\n    this.load.emit();\r\n  }\r\n\r\n  newData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(this.getAllCurrentData());\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    if (this.changeCounter > 0) {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title = this.translate.instant('caution')\r\n      dialogRef.componentInstance.message = this.translate.instant('duplicateMessage')\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.event === 'Accept') {\r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map(node => node.data);\r\n      this.duplicate.emit(selectedData);\r\n      this.gridOptions.api.deselectAll();\r\n\r\n    }\r\n  }\r\n\r\n\r\n  applyChanges(): void {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys()) {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.gridModified.emit(false);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.someStatusHasChangedToDelete = false;\r\n    this.someStatusHasChangedToRegister = false;\r\n    // this.params.colDef.cellStyle = { backgroundColor: '#FFFFFF' };\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void {\r\n    this.gridApi.stopEditing(false);\r\n    let newElementsActived = this.allNewElements;\r\n\r\n    while (this.changeCounter > 0) {\r\n      this.undo();\r\n    }\r\n\r\n    this.changesMap.clear();\r\n    //this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n\r\n    if (this.statusColumn && !this.discardNonReverseStatus) {\r\n      let rowsWithStatusModified = [];\r\n      this.gridApi.forEachNode(function (node) {\r\n        if (node.data.status === 'pendingModify' || node.data.status === 'pendingDelete') {\r\n          if (node.data.status === 'pendingDelete') {\r\n            rowsWithStatusModified.push(node.data);\r\n          }\r\n          if (node.data.newItem || newElementsActived) {\r\n            node.data.status = 'pendingCreation'\r\n          }\r\n          else if(node.data.newRegister){\r\n            node.data.status = 'unregisteredLayer'\r\n          }\r\n          else {\r\n            node.data.status = 'statusOK'\r\n          }\r\n        }\r\n        else if(node.data.status === 'pendingRegistration'){\r\n          node.data.status = 'unregisteredLayer';\r\n          rowsWithStatusModified.push(node.data);\r\n        }\r\n\r\n      });\r\n      this.someStatusHasChangedToDelete = false;\r\n      this.someStatusHasChangedToRegister = false;\r\n      this.discardChanges.emit(rowsWithStatusModified);\r\n      this.gridModified.emit(false);\r\n    }\r\n    this.gridApi.redrawRows();\r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void {\r\n\r\n    this.deleteChanges();\r\n\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    if (this.changeCounter == 0) { this.gridModified.emit(false) }\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e) {\r\n    if (this.modificationChange) {\r\n      this.changeCounter++;\r\n      if (this.changeCounter == 1) { this.gridModified.emit(true) }\r\n      this.redoCounter = 0;\r\n      this.onCellValueChanged(e);\r\n      this.modificationChange = false;\r\n    }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void {\r\n    this.params = params;\r\n    if (this.changeCounter > this.previousChangeCounter)\r\n    // True if we have edited some cell or we have done a redo \r\n    {\r\n\r\n      if (params.oldValue !== params.value && !(params.oldValue == null && params.value === '')) {\r\n\r\n        if (!this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n        {\r\n          const addMap: Map<string, number> = new Map<string, number>();\r\n          addMap.set(params.colDef.field, 1)\r\n          this.changesMap.set(params.node.id, addMap);\r\n          if (this.statusColumn) {\r\n            let node = this.gridApi.getRowNode(params.node.id).data\r\n            if (node.status !== 'pendingRegistration' && node.status!== 'unregisteredLayer') {\r\n            this.gridApi.getRowNode(params.node.id).data.status = 'pendingModify'\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (!this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n          }\r\n\r\n          else {\r\n            // We already had edited this cell, so we only increment number of changes of it on the map \r\n            const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n          }\r\n\r\n        }\r\n        this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n        this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n      }\r\n\r\n    }\r\n    else if (this.changeCounter < this.previousChangeCounter) { // True if we have done an undo\r\n      let currentChanges = -1;\r\n      if (this.changesMap.has(params.node.id)) { currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field); }\r\n\r\n      if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n        this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n        if (this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n          this.changesMap.delete(params.node.id);\r\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n          if (this.statusColumn) {\r\n            let node= this.gridApi.getRowNode(params.node.id).data\r\n            if ( node.status !== 'pendingCreation' && node.status !== 'pendingRegistration' && node.status !=='unregisteredLayer') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = node.newItem?'pendingCreation':'statusOK';\r\n            }\r\n          };\r\n          // We paint it white\r\n          this.gridApi.redrawRows({ rowNodes: [row] });\r\n\r\n        }\r\n        else {\r\n          this.paintCells(params, this.changesMap);\r\n        }\r\n\r\n      }\r\n      else if (currentChanges > 1) // The cell isn't in his initial state yet\r\n      {                                 //We can't do else because we can be doing an undo without changes \r\n        this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n        this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n      }\r\n      this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else { // Control of modifications without changes\r\n      if (!(params.oldValue == null && params.value === '')) {\r\n        let newValue: string;\r\n        if (params.value == null) { newValue = '' }\r\n        else { newValue = params.value.toString() }\r\n\r\n        if ((params.oldValue != undefined && params.oldValue != null && params.oldValue.toString() !== newValue.toString())\r\n          || ((params.oldValue == undefined || params.oldValue == null) && newValue != null)) {\r\n\r\n          this.modificationChange = true;\r\n          if (params.colDef.cellRenderer == \"btnCheckboxRendererComponent\") {\r\n            var undoRedoActions = {\r\n              cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n            };\r\n            this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n            this.gridApi.undoRedoService.isFilling = false;\r\n            this.onCellEditingStopped(params);\r\n          }\r\n        }\r\n        else { this.modificationWithoutChanges(params) }\r\n\r\n      }\r\n      else { this.modificationWithoutChanges(params) }\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if (this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any, changesMap: Map<number, Map<string, number>>,) {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n    this.gridApi.redrawRows({ rowNodes: [row] });\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  _GetAllsTable:  Array<() => Observable<any>>;\r\n  _columnDefsTable: Array<any[]>;\r\n  _singleSelectionTable: Array<boolean>;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-grid',\r\n  templateUrl: './dialog-grid.component.html',\r\n  styleUrls: ['./dialog-grid.component.scss']\r\n})\r\nexport class DialogGridComponent implements OnInit {\r\n\r\n  title: string;\r\n  getAllRows: Subject<boolean> = new Subject <boolean>();\r\n  private _addButtonClickedSubscription: any;\r\n  tablesReceivedCounter: number;\r\n  allRowsReceived: Array<any[]> = [];\r\n  changeHeightButton : boolean;\r\n  heightByDefault : any;\r\n\r\n  //Inputs\r\n  themeGrid: any;\r\n  getAllsTable: Array<() => Observable<any>>;\r\n  columnDefsTable: Array<any[]>;\r\n  singleSelectionTable: Array<boolean>;\r\n  titlesTable: Array<string>;\r\n  orderTable: Array<string> = [];\r\n  addButtonClickedSubscription: Observable <boolean> ;\r\n  nonEditable: boolean;\r\n  addFieldRestriction: Array<any> = [];\r\n  fieldRestrictionWithDifferentName: Array<any> = [];\r\n  currentData: Array<any> = [];\r\n\r\n  //Outputs\r\n  @Output() joinTables : EventEmitter<Array<any[]>>;\r\n\r\n  \r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\r\n    \r\n    this.joinTables = new EventEmitter();\r\n    // this.nonEditable = true;\r\n    this.tablesReceivedCounter = 0;\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.addButtonClickedSubscription) {\r\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\r\n        this.getAllSelectedRows();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getAllSelectedRows() {\r\n    this.getAllRows.next(true);\r\n  }\r\n\r\n  joinRowsReceived(data: any[])\r\n  {\r\n      this.allRowsReceived.push(data);\r\n      this.tablesReceivedCounter++;\r\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\r\n      {\r\n        this.doAdd(this.allRowsReceived);\r\n        console.log(this.allRowsReceived);\r\n      }\r\n  }\r\n\r\n  doAdd(rowsToAdd){\r\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'; \r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-form',\r\n  templateUrl: './dialog-form.component.html',\r\n  styleUrls: ['./dialog-form.component.scss']\r\n})\r\nexport class DialogFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  HTMLReceived;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DialogFormComponent>,\r\n    public dialog: MatDialog,\r\n    private translate: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  doAdd(){\r\n    if(this.form.valid) { this.dialogRef.close({event:'Add'}); }\r\n    else {\r\n       const dialogRef = this.dialog.open(DialogMessageComponent);\r\n       dialogRef.componentInstance.title = this.translate.instant(\"atention\")\r\n       dialogRef.componentInstance.message = this.translate.instant(\"requiredFieldMessage\")\r\n       dialogRef.componentInstance.hideCancelButton = true;\r\n       dialogRef.afterClosed().subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output,ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { forEach } from 'jszip';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n  active: any\r\n  cartographyId: any\r\n  cartographyName: any\r\n  datasetURL: any\r\n  description: any\r\n  filterGetFeatureInfo: any\r\n  filterGetMap: any\r\n  filterSelectable: any\r\n  isFolder: any\r\n  metadataURL: any\r\n  order: any\r\n  parent: any\r\n  queryableActive: any\r\n  radio: any\r\n  tooltip: any\r\n  _links: any\r\n  status: any\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string,\r\n    public status: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): any { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj, allNewElements) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0, allNewElements);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number, allNewElements: any) {\r\n    var map = {};\r\n    if(arrayTreeNodes.length===0)\r\n    {\r\n      let root = {\r\n        isFolder:true,\r\n        name:'Root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        order: 0,\r\n        children: [],\r\n        id:0\r\n      }\r\n      map['root']=root;\r\n    }\r\n    else{\r\n      arrayTreeNodes.forEach((treeNode) => {\r\n        var obj = treeNode;\r\n        obj.children = [];\r\n        obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n        if(allNewElements) {\r\n          obj.status='pendingCreation';\r\n          if(obj.id) { obj.id = obj.id * -1 }\r\n          if(obj.parent) { obj.parent = obj.parent * -1 }\r\n        }\r\n  \r\n        if(!map[obj.id]) {map[obj.id] = obj;}\r\n        else{\r\n          let previousChildren= map[obj.id].children\r\n          map[obj.id] = obj;\r\n          map[obj.id].children=previousChildren\r\n        }\r\n        var parent = obj.parent || 'root';\r\n        if (!map[parent]) {\r\n          map[parent] = {\r\n            children: []\r\n          };\r\n        }\r\n        map[parent].children.push(obj);\r\n      });\r\n      map['root'].type='folder';\r\n      map['root'].name='Root';\r\n      map['root'].order=0;\r\n      map['root'].isFolder=true;\r\n      map['root'].isRoot=true;\r\n    }\r\n\r\n\r\n    return map['root'];\r\n  }\r\n  \r\n\r\n  deleteItem(node: FileNode, changedData:any) {\r\n    this.deleteNode(changedData.children, node);\r\n    this.dataChange.next(changedData);\r\n  }\r\n\r\n  deleteNode(nodes: FileNode[], nodeToDelete: FileNode) {\r\n    const index = nodes.indexOf(nodeToDelete, 0);\r\n    if (index > -1) {\r\n      nodes.splice(index, 1);\r\n    } else {\r\n      nodes.forEach(node => {\r\n        if (node.children && node.children.length > 0) {\r\n          this.deleteNode(node.children, nodeToDelete);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  copyPasteItem(from: FileNode, to: FileNode, changedData:any): FileNode {\r\n    const newItem = this.insertItem(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemAbove(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemAbove(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemBelow(from: FileNode, to: FileNode,changedData:any): FileNode {\r\n    const newItem = this.insertItemBelow(to, from,changedData);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  \r\n  getNewItem(node:FileNode){\r\n    const newItem = {\r\n      name: node.name,\r\n      children: node.children,\r\n      type: node.type,\r\n      id: node.id, \r\n      active: node.active,\r\n      cartographyId: node.cartographyId,\r\n      cartographyName: node.cartographyName,\r\n      datasetURL: node.datasetURL,\r\n      description: node.description,\r\n      filterGetFeatureInfo: node.filterGetFeatureInfo,\r\n      filterGetMap: node.filterGetMap,\r\n      filterSelectable: node.filterSelectable,\r\n      isFolder: node.isFolder,\r\n      metadataURL: node.metadataURL,\r\n      order: node.order,\r\n      queryableActive: node.queryableActive,\r\n      radio: node.radio,\r\n      tooltip: node.tooltip,\r\n      _links: node._links } as FileNode;\r\n\r\n    return newItem;\r\n  }\r\n\r\n  insertItem(parent: FileNode, node: FileNode,changedData:any): FileNode {\r\n    if (!parent.children) {\r\n      parent.children = [];\r\n    }\r\n    const newItem = this.getNewItem(node)\r\n    newItem.parent = parent==null || parent.id==undefined?null:parent.id;\r\n\r\n    parent.children.push(newItem);\r\n    this.setOrder(parent.children)\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemAbove(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n  \r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node), 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemBelow(node: FileNode, nodeDrag: FileNode,changedData:any): FileNode {\r\n    const parentNode = this.getParentFromNodes(node,changedData);\r\n   \r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(parentNode.children)\r\n    } else {\r\n      changedData.children.splice(changedData.children.indexOf(node) + 1, 0, newItem);\r\n      this.setOrder(changedData.children)\r\n    }\r\n    this.dataChange.next(changedData);\r\n    return newItem;\r\n  }\r\n\r\n  \r\n  getParentFromNodes(node: FileNode,changedData:any): FileNode {\r\n    for (let i = 0; i < changedData.children.length; ++i) {\r\n      const currentRoot =  changedData.children[i];\r\n      const parent = this.getParent(currentRoot, node);\r\n      if (parent != null) {\r\n        return parent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  getParent(currentRoot: FileNode, node: FileNode): FileNode {\r\n    if (currentRoot.children && currentRoot.children.length > 0) {\r\n      for (let i = 0; i < currentRoot.children.length; ++i) {\r\n        const child = currentRoot.children[i];\r\n        if (child === node) {\r\n          return currentRoot;\r\n        } else if (child.children && child.children.length > 0) {\r\n          const parent = this.getParent(child, node);\r\n          if (parent != null) {\r\n            return parent;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Output() loadButtonClicked: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  @Input() eventRefreshSubscription: Observable <any> ;\r\n  @Input() loadDataButton: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  private _eventRefreshSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() allNewElements: any;\r\n\r\n\r\n  /* Drag and drop */\r\n  dragNode: any;\r\n  dragNodeExpandOverWaitTimeMs = 1500;\r\n  dragNodeExpandOverNode: any;\r\n  dragNodeExpandOverTime: number;\r\n  dragNodeExpandOverArea: string;\r\n  @ViewChild('emptyItem') emptyItem: ElementRef;\r\n\r\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n    flatNodeMap = new Map<FileFlatNode, FileNode>();\r\n\r\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n    nestedNodeMap = new Map<FileNode, FileFlatNode>();\r\n\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.loadButtonClicked = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe((event: string) => {\r\n        this.emitAllRows(event);\r\n      });\r\n    }\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    \r\n    this.getElements();\r\n  }\r\n\r\n  loadDataButtonClicked(){\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.loadButtonClicked.emit(allRows)\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData, this.allNewElements);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.name === node.name\r\n      ? existingNode\r\n      : new FileFlatNode((node.children && node.children.length > 0),node.name,level,node.type,node.id,node.status);\r\n\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  handleDragStart(event, node) {\r\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\r\n    event.dataTransfer.setData('foo', 'bar');\r\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\r\n    this.dragNode = node;\r\n    this.treeControl.collapse(node);\r\n  }\r\n\r\n  handleDragOver(event, node) {\r\n    event.preventDefault();\r\n\r\n    // Handle node expand\r\n    if (node === this.dragNodeExpandOverNode) {\r\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\r\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\r\n          this.treeControl.expand(node);\r\n        }\r\n      }\r\n    } else {\r\n      this.dragNodeExpandOverNode = node;\r\n      this.dragNodeExpandOverTime = new Date().getTime();\r\n    }\r\n\r\n    // Handle drag area\r\n    const percentageX = event.offsetX / event.target.clientWidth;\r\n    const percentageY = event.offsetY / event.target.clientHeight;\r\n    if (percentageY < 0.25) {\r\n      this.dragNodeExpandOverArea = 'above';\r\n    } else if (percentageY > 0.75) {\r\n      this.dragNodeExpandOverArea = 'below';\r\n    } else {\r\n      this.dragNodeExpandOverArea = 'center';\r\n    }\r\n  }\r\n\r\n  handleDrop(event, node) {\r\n    event.preventDefault();\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n\r\n    \r\n    let toFlatNode;\r\n    if(node.id === undefined) { toFlatNode=changedData[0] }\r\n    else{\r\n      toFlatNode= this.findNodeSiblings(changedData[0].children, node.id).find(nodeAct => nodeAct.id === node.id);\r\n    }\r\n    let fromFlatNode;\r\n    if( this.dragNode.id === undefined) { fromFlatNode=changedData[0] }\r\n    else{\r\n      fromFlatNode = this.findNodeSiblings(changedData[0].children, this.dragNode.id).find(nodeAct => nodeAct.id === this.dragNode.id);\r\n    }\r\n    if (this.dragNode.status!=\"pendingDelete\" && node !== this.dragNode && (this.dragNodeExpandOverArea !== 'center' || (this.dragNodeExpandOverArea === 'center' && toFlatNode.isFolder))) {\r\n      let newItem: FileNode;\r\n\r\n      if (this.dragNodeExpandOverArea === 'above') {\r\n        newItem = this.database.copyPasteItemAbove(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else if (this.dragNodeExpandOverArea === 'below') {\r\n        newItem = this.database.copyPasteItemBelow(fromFlatNode,toFlatNode,changedData[0]);\r\n      } else {\r\n        newItem = this.database.copyPasteItem(fromFlatNode, toFlatNode,changedData[0]);\r\n      }    \r\n      let parentLvl=this.treeControl.dataNodes.find((n) => n.id === fromFlatNode.id).level;\r\n      fromFlatNode.children.forEach(child=>{\r\n        this.treeControl.dataNodes.find((n) => n.id === child.id).level=parentLvl+1\r\n      });\r\n      this.database.deleteItem(fromFlatNode,changedData[0]);\r\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\r\n    }\r\n   \r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n   sortByOrder(data: any[]){\r\n    // data.sort((a,b) => a.order.toString().localeCompare( b.order.toString()));\r\n    data.sort((a,b) => (a.order > b.order) ? 1 : ((b.order > a.order) ? -1 : 0));\r\n    data.forEach((item) => {\r\n      if (item.children && item.children.length>0) {\r\n        this.sortByOrder(item.children);\r\n      }\r\n\r\n    });\r\n   }\r\n\r\n   setOrder(data: any[]){\r\n    for(let i=0; i< data.length; i++){\r\n      data[i].order=i;\r\n      if(! data[i].status) { data[i].status=\"Modified\"; } \r\n    }\r\n    return data;\r\n   }\r\n\r\n  rebuildTreeForData(data: any[]) {\r\n    //this.dataSource.data = data;\r\n    this.sortByOrder(data);\r\n    this.dataSource.data = [];\r\n    this.dataSource.data = data;\r\n    this.treeControl.expansionModel.selected.forEach((nodeAct) => {\r\n      if(nodeAct){\r\n        const node = this.treeControl.dataNodes.find((n) => n.id === nodeAct.id);\r\n        this.treeControl.expand(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {\r\n      newFolder.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newFolder)\r\n    }\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      newFolder.order=siblings[index].children.length;\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newNode.parent === null) {\r\n      newNode.order=dataToChange[0].children.length;\r\n      dataToChange[0].children.push(newNode)\r\n    }\r\n    else{\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    newNode.order=siblings[index].children.length;\r\n    siblings[index].children.push(newNode)\r\n    }\r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    let nodeClicked= siblings.find(node => node.id === id);\r\n    if(button ==='edit')  {this.emitNode.emit(nodeClicked)}\r\n    else if(button === 'newFolder') {this.createFolder.emit(nodeClicked)}\r\n    else if(button === 'newNode') {this.createNode.emit( nodeClicked)}\r\n    else if(button === 'delete') {\r\n      // let children= this.getAllChildren(nodeClicked.children)\r\n      // children.forEach(children => {\r\n      //   children.status='pendingDelete';\r\n      // });\r\n      this.deleteChildren(nodeClicked.children);\r\n      // nodeClicked.children=children\r\n      nodeClicked.status='pendingDelete'\r\n      \r\n      this.rebuildTreeForData(changedData);\r\n    }\r\n\r\n  }\r\n\r\n  emitAllRows(event)\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.emitAllNodes.emit({event:event, data: allRows});\r\n  }\r\n\r\n  getAllChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children && item.children.length>0) {\r\n        subResult = this.getAllChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n\r\n  deleteChildren(arr)\r\n  {\r\n    arr.forEach((item, i) => {\r\n      if (item.children && item.children.length>0) {\r\n        this.deleteChildren(item.children);\r\n      }\r\n      item.status='pendingDelete'\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { MatIconRegistry } from \"@angular/material/icon\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-translation',\r\n  templateUrl: './dialog-translation.component.html',\r\n  styleUrls: ['./dialog-translation.component.scss']\r\n})\r\nexport class DialogTranslationComponent implements OnInit {\r\n\r\n  translationForm: FormGroup = new FormGroup({})\r\n  translationsMap:  Map<string, any>;\r\n  languageByDefault:  string;\r\n  languagesAvailables: Array<any>;\r\n  loading = true;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogTranslationComponent>,\r\n    private matIconRegistry: MatIconRegistry,\r\n    private domSanitizer: DomSanitizer) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeDialog();\r\n    this.loading=false;\r\n  }\r\n\r\n  initializeDialog(): void{\r\n    this.languagesAvailables.forEach(element => {\r\n      this.registerIcon(element.shortname)\r\n      this.initializeForm(element.shortname);\r\n    });\r\n  }\r\n\r\n  registerIcon(elementShortname){\r\n    this.matIconRegistry.addSvgIcon(\r\n      this.getIconName(elementShortname),\r\n      this.domSanitizer.bypassSecurityTrustResourceUrl(`assets/img/flag_${elementShortname}.svg`)\r\n    );\r\n  }\r\n\r\n  initializeForm(elementShortname):void{\r\n    let currentValueOnMap = this.translationsMap.get(elementShortname);\r\n    let valueToPutOnForm = (currentValueOnMap && currentValueOnMap.translation)?currentValueOnMap.translation:null;\r\n    this.translationForm.addControl(elementShortname, new FormControl(valueToPutOnForm, []))\r\n  }\r\n\r\n  getIconName(elementShortname):string{\r\n    return `icon_lang_${elementShortname}` \r\n  }\r\n\r\n  doAccept(){\r\n    this.languagesAvailables.forEach(language => {\r\n      if(this.translationsMap.has(language.shortname) && this.translationForm.get(language.shortname)?.value){\r\n        this.translationsMap.get(language.shortname).translation = this.translationForm.get(language.shortname).value\r\n      }\r\n    });\r\n\r\n    this.dialogRef.close({event:'Accept', data: this.translationsMap});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnChanges, ViewChild, ElementRef, Input, ViewEncapsulation } from '@angular/core';\r\nimport * as d3 from 'd3';\r\n\r\n\r\n@Component({\r\n  selector: 'app-datagraph',\r\n  templateUrl: './datagraph.component.html',\r\n  styleUrls: ['./datagraph.component.scss']\r\n})\r\nexport class DatagraphComponent implements OnInit {\r\n\r\n  @ViewChild('chart',{static: true}) private chartContainer: ElementRef;\r\n  @Input() private data: Array<any>;\r\n  @Input() private type;\r\n  private margin: any = { top: 20, bottom: 60, left: 40, right: 40};\r\n  private margin2 = 80;\r\n  private chart: any;\r\n  private width: number;\r\n  private height: number;\r\n  private xScale: any;\r\n  private yScale: any;\r\n  private colors: any;\r\n  private xAxis: any;\r\n  private yAxis: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n      if(this.type == \"bar\"){\r\n        this.createBarChart();\r\n        if (this.data) {\r\n          this.updateBarChart(); \r\n        }\r\n      }\r\n      \r\n  }\r\n  \r\n\r\n  ngOnChanges() {\r\n    if(this.type == \"bar\")\r\n    {\r\n      if (this.chart) {\r\n        this.updateBarChart();\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  createBarChart() {\r\n    let element = this.chartContainer.nativeElement;\r\n    this.width = element.offsetWidth - this.margin.left - this.margin.right;\r\n    this.height = element.offsetHeight - this.margin.top - this.margin.bottom;\r\n    let svg = d3.select(element).append('svg')\r\n      .attr('width', '100%')\r\n      .attr(\"height\", '100%')\r\n\r\n    // chart plot area\r\n    this.chart = svg.append('g')\r\n      .attr('class', 'bars')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\r\n      \r\n      const barGroups = this.chart.selectAll()\r\n      .data(this.data)\r\n      .enter()\r\n      .append('g')\r\n\r\n  \r\n\r\n    // define X & Y domains\r\n    let xDomain = this.data.map(d => d.index);\r\n    let yDomain = [0, (d3.max(this.data, d => d.value))];\r\n\r\n    // create scales\r\n    this.xScale = d3.scaleBand().padding(0.3).domain(xDomain).rangeRound([0, this.width]);\r\n    this.yScale = d3.scaleLinear().domain(yDomain).range([this.height, 0]);\r\n\r\n    // bar colors\r\n   // this.colors = d3.scaleLinear().domain([0, this.data.length]).range(<any[]>['red', 'blue']);\r\n    \r\n    barGroups \r\n      .append('text')\r\n      .attr('class', 'value')\r\n      .attr('x', (a) => this.xScale(a.index) + this.xScale.bandwidth() / 2)\r\n      .attr('y', (a) => this.yScale(a.value)-5)\r\n      .attr('text-anchor', 'middle')\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n      .text((a) => `${a.value}`)\r\n\r\n\r\n    // x & y axis\r\n    this.xAxis = svg.append('g')\r\n      .attr('class', 'axis axis-x')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top + this.height})`)\r\n      .call(d3.axisBottom(this.xScale))\r\n      .selectAll(\"text\")\r\n      .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n      .style(\"text-anchor\", \"end\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n    this.yAxis = svg.append('g')\r\n      .attr('class', 'axis axis-y')\r\n      .attr('transform', `translate(${this.margin.left}, ${this.margin.top})`)\r\n      .call(d3.axisLeft(this.yScale))\r\n      .selectAll(\"text\")\r\n      .style(\"font-size\", 9)\r\n      .style(\"fill\", \"black\")\r\n\r\n      \r\n  }\r\n\r\n  updateBarChart() {\r\n    // update scales & axis\r\n    this.xScale.domain(this.data.map(d => d.index));\r\n    this.yScale.domain([0,(d3.max(this.data, d => d.value))]);\r\n    this.xAxis.transition().call(d3.axisBottom(this.xScale));\r\n    this.yAxis.transition().call(d3.axisLeft(this.yScale));\r\n\r\n    let update = this.chart.selectAll('.bar')\r\n      .data(this.data);\r\n\r\n    // remove exiting bars\r\n    update.exit().remove();\r\n\r\n    // update existing bars\r\n    this.chart.selectAll('.bar').transition()\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('width', d => this.xScale.bandwidth())\r\n      .attr('height', d => this.height - this.yScale(d[1]))\r\n      .style('fill', '#be7d27');\r\n\r\n    // add new bars\r\n    update\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => this.xScale(d.index))\r\n      .attr('y', d => this.yScale(d.value))\r\n      .attr('height', d => this.height - this.yScale(d.value))\r\n      .attr('width', this.xScale.bandwidth())\r\n      .style('fill', '#be7d27')\r\n      .transition()\r\n      .delay((d, i) => i * 10)\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { SitmunFrontendCoreModule } from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\nimport { DialogTranslationComponent } from './dialog-translation/dialog-translation.component';\r\nimport { DatagraphComponent } from './data-graph/datagraph.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule,\r\n    SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    DialogTranslationComponent,\r\n    DatagraphComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"]}