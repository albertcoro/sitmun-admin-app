{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-edit-rendered/btn-edit-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-rendered/btn-checkbox-rendered.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/btn-checkbox-filter/btn-checkbox-filter.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-message/dialog-message.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-grid/data-grid.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/material-module.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-grid/dialog-grid.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/dialog-form/dialog-form.component.ts","../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/data-tree/data-tree.component.ts","../../../src/main/angular-library/projects/sitmun-frontend-gui/src/lib/sitmun-frontend-gui.module.ts"],"names":["Object","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","BtnEditRenderedComponent","prototype","agInit","params","this","refresh","btnClickedHandler","$event","clicked","getParams","ngOnDestroy","Component","args","selector","template","BtnCheckboxRenderedComponent","invokeParentMethod","context","componentParent","methodFromParent","node","rowIndex","colDef","headerName","btnCheckedHandler","event","checked","target","firstElementChild","colId","column","api","undoRedoService","isFilling","setDataValue","BtnCheckboxFilterComponent","valueGetter","filterParams","suppressFilterButton","isFilterActive","text","doesFilterPass","_this","toLowerCase","split","every","filterWord","toString","indexOf","getModel","setModel","model","onChange","newValue","parentFilterInstance","instance","onFloatingFilterChanged","onParentModelChanged","parentModel","currentValue","filter","host","class","ViewChild","read","ViewContainerRef","DialogMessageComponent","dialogRef","ngOnInit","doAccept","close","closeDialog","MatDialogRef","DataGridComponent","dialog","translate","elRef","AllCommunityModules","statusColumn","Map","modificationChange","undoNoChanges","frameworkComponents","btnEditRendererComponent","btnCheckboxRendererComponent","btnCheckboxFilterComponent","remove","EventEmitter","new","add","sendChanges","getSelectedRows","duplicate","getAllRows","changeCounter","previousChangeCounter","redoCounter","gridOptions","defaultColDef","sortable","flex","editable","nonEditable","cellStyle","backgroundColor","suppressMenu","resizable","columnTypes","dateColumn","comparator","filterLocalDateAtMidnight","cellValue","dateCellValue","Date","dateFilter","getTime","rowSelection","singleClickEdit","localeTextFunc","key","defaultValue","data","instant","eventRefreshSubscription","_eventRefreshSubscription","subscribe","changesMap","clear","getElements","eventGetSelectedRowsSubscription","_eventGetSelectedRowsSubscription","emitSelectedRows","eventGetAllRowsSubscription","_eventGetAllRowsSubscription","emitAllRows","eventSaveAgGridStateSubscription","_eventSaveAgGridStateSubscription","saveAgGridState","eventAddItemsSubscription","items","addItems","firstDataRendered","undefined","localStorage","agGridState","JSON","parse","idAgGrid","id","gridApi","setFilterModel","filterState","gridColumnApi","setColumnState","colState","setSortModel","sortState","searchValue","valueSearchGeneric","quickSearch","removeAgGridState","onGridReady","singleSelection","columnApi","console","log","columnDefs","_b","_c","field","defaultColumnSorting","sortModel","sort","areRowsSelected","getSelectedNodes","selectedData","map","emit","rowData","forEachNode","getColumnState","getFilterModel","getSortModel","setItem","stringify","removeItem","getColumnKeysAndHeaders","columnkeys","header","getAllDisplayedColumns","forEach","element","userProvidedColDef","join","exportData","onlySelected","columnKeys","customHeader","skipHeader","exportDataAsCsv","setQuickFilter","getAll","setRowData","setSize","allColumnIds","columns","getAllColumns","autoSizeColumns","grid","availableWidth","gridPanel","eBodyViewport","clientWidth","columnController","getWidthOfColsInList","sizeColumnsToFit","newItems","itemsToAdd","item","find","status","updateRowData","changeHeight","pixels","nativeElement","parentElement","style","height","removeData","stopEditing","selectedNodes","selectedRows","selectedRows_1","selectedRows_1_1","getRowNode","refreshCells","deselectAll","newData","onAddButtonClicked","onDuplicateButtonClicked","open","componentInstance","title","message","afterClosed","result","applyChanges","itemsChanged","keys","redrawRows","deleteChanges","undo","onFilterModified","undoCellEditing","redo","redoCellEditing","onCellEditingStopped","onCellValueChanged","oldValue","has","get","currentChanges","set","addMap","paintCells","delete","size","row","getDisplayedRowAtIndex","rowNodes","cellRenderer","undoRedoActions","cellValueChanges","pushActionsToUndoStack","modificationWithoutChanges","getColumnIndexByColId","findIndex","col","getColId","changeCellStyleColumns","color","columnNumber","gridColumns","MatDialog","TranslateService","ElementRef","Input","Output","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","MatFormFieldModule","DialogGridComponent","Subject","joinTables","tablesReceivedCounter","addButtonClickedSubscription","_addButtonClickedSubscription","getAllSelectedRows","joinRowsReceived","allRowsReceived","getAllsTable","doAdd","rowsToAdd","DialogFormComponent","form","valid","hideCancelButton","expandable","name","level","type","FileDatabase","BehaviorSubject","defineProperty","dataChange","initialize","dataObj","buildFileTree","arrayTreeNodes","isFolder","isRoot","children","treeNode","obj","previousChildren","parent","deleteItem","deleteNode","nodes","nodeToDelete","index","splice","copyPasteItem","from","to","insertItem","copyPasteItemAbove","insertItemAbove","copyPasteItemBelow","insertItemBelow","getNewItem","active","cartographyId","cartographyName","datasetURL","description","filterGetFeatureInfo","filterGetMap","filterSelectable","metadataURL","order","queryableActive","radio","tooltip","_links","newItem","nodeDrag","parentNode","getParentFromNodes","currentRoot","getParent","child","Injectable","DataTreeComponent","database","SelectionModel","dragging","expandDelay","validateDrop","dragNodeExpandOverWaitTimeMs","existingNode","nestedNodeMap","flatNode","FileFlatNode","flatNodeMap","observableOf","_","_nodeData","emitNode","createNode","createFolder","emitAllNodes","treeFlattener","MatTreeFlattener","transformer","_getLevel","_isExpandable","_getChildren","treeControl","FlatTreeControl","dataSource","MatTreeFlatDataSource","eventNodeUpdatedSubscription","updateNode","eventCreateNodeSubscription","createNewFolder","createNewNode","treeData","rebuildTreeForData","visibleNodes","addExpandedChildren","expanded","expansionModel","selected","findNodeSiblings","arr","subResult","handleDragStart","dataTransfer","setData","setDragImage","emptyItem","dragNode","collapse","handleDragOver","preventDefault","dragNodeExpandOverNode","isExpanded","dragNodeExpandOverTime","expand","offsetX","percentageY","offsetY","clientHeight","dragNodeExpandOverArea","handleDrop","toFlatNode","fromFlatNode","parentLvl_1","dataNodes","expandDescendants","handleDragEnd","nodeAct","getParentNode","currentLevel","currentNode","nodeUpdated","dataToChange","siblings","newFolder","newNode","onButtonClicked","button","changedData","nodeClicked","deleteChildren","dataToEmit","allRows","getAllChildren","apply","arguments","concat","__spread","createTranslateLoader","http","TranslateHttpLoader","providers","registerLocaleData","localeCa","localeEs","imports","RouterModule","HttpClientModule","CommonModule","FormsModule","NoopAnimationsModule","AngularHalModule","ReactiveFormsModule","BrowserAnimationsModule","AgGridModule","SitmunFrontendCoreModule","MaterialModule","TranslateModule","forRoot","loader","provide","TranslateLoader","useFactory","Éµ0","deps","HttpClient","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-edit-rendered',\r\n  templateUrl: './btn-edit-rendered.component.html',\r\n  styleUrls: ['./btn-edit-rendered.component.scss']\r\n})\r\nexport class BtnEditRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    return true;\r\n  }\r\n\r\n  btnClickedHandler($event) {\r\n    this.params.clicked(this.params.value);\r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { ICellRendererAngularComp } from '@ag-grid-community/angular';\r\nimport { Component, OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-rendered',\r\n  templateUrl: './btn-checkbox-rendered.component.html',\r\n  styleUrls: ['./btn-checkbox-rendered.component.scss']\r\n})\r\nexport class BtnCheckboxRenderedComponent implements ICellRendererAngularComp, OnDestroy {\r\n\r\n  public params: any;\r\n\r\n  agInit(params: any): void {\r\n    this.params = params;\r\n  }\r\n\r\n  refresh(params: any): boolean {\r\n    this.params = params;\r\n    \r\n    return true;\r\n  }\r\n\r\n  public invokeParentMethod() {\r\n    this.params.context.componentParent.methodFromParent(\r\n      `Row: ${this.params.node.rowIndex}, Col: ${this.params.colDef.headerName}`\r\n    );\r\n  }\r\n\r\n  btnCheckedHandler(event) {\r\n    let checked = !event.target.firstElementChild.checked;\r\n    let colId = this.params.column.colId;\r\n    this.params.value=checked;\r\n    this.params.api.undoRedoService.isFilling=true;\r\n    this.params.node.setDataValue(colId, checked);\r\n\r\n    \r\n  }\r\n\r\n  getParams(){\r\n    return this.params;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // no need to remove the button click handler \r\n  }\r\n\r\n}\r\n","import { Component, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\nimport {\r\n  IAfterGuiAttachedParams,\r\n  IDoesFilterPassParams,\r\n  IFilterParams,\r\n  RowNode,\r\n  IFloatingFilter,\r\n  NumberFilter,\r\n  NumberFilterModel,\r\n  IFloatingFilterParams,\r\n} from '@ag-grid-community/all-modules';\r\nimport { AgFrameworkComponent } from '@ag-grid-community/angular';\r\nimport { IFilterAngularComp } from '@ag-grid-community/angular';\r\n\r\n@Component({\r\n  selector: 'app-btn-checkbox-filter',\r\n  templateUrl: './btn-checkbox-filter.component.html',\r\n  styleUrls: ['./btn-checkbox-filter.component.scss'],\r\n  host: {'class': 'hostClass'}\r\n})\r\nexport class BtnCheckboxFilterComponent implements IFloatingFilter, AgFrameworkComponent<IFloatingFilterParams>   {\r\n  private params: IFloatingFilterParams;\r\n  private valueGetter: (rowNode: RowNode) => any;\r\n  public text: string = '';\r\n  public currentValue: number;\r\n  @ViewChild('input', { read: ViewContainerRef }) public input;\r\n\r\n  agInit(params: IFloatingFilterParams): void {\r\n    this.params = params;\r\n    this.valueGetter = params.filterParams.valueGetter;\r\n    this.params.suppressFilterButton=true;\r\n  }\r\n\r\n  isFilterActive(): boolean {\r\n    return this.text != null && this.text !== '';\r\n  }\r\n\r\n  doesFilterPass(params: IDoesFilterPassParams): boolean {\r\n    return this.text\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .every(\r\n        (filterWord) =>\r\n          this.valueGetter(params.node)\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(filterWord) >= 0\r\n      );\r\n  }\r\n\r\n  getModel(): any {\r\n    return { value: this.text };\r\n  }\r\n\r\n  setModel(model: any): void {\r\n    this.text = model ? model.value : '';\r\n  }\r\n\r\n\r\n onChange(newValue): void {\r\n    this.params.parentFilterInstance(function (instance) {\r\n      (<NumberFilter>instance).onFloatingFilterChanged(\r\n        'contains',\r\n        newValue\r\n      );\r\n    });\r\n  }\r\n\r\n  onParentModelChanged(parentModel: any): void {\r\n    if (!parentModel) {\r\n      this.currentValue = 0;\r\n    } else {\r\n      // note that the filter could be anything here, but our purposes we're assuming a greater than filter only,\r\n      // so just read off the value and use that\r\n      this.currentValue = parentModel.filter;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog-message',\r\n  templateUrl: './dialog-message.component.html',\r\n  styleUrls: ['./dialog-message.component.scss']\r\n})\r\nexport class DialogMessageComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  hideCancelButton : boolean=false;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogMessageComponent>){ }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  doAccept(){\r\n    this.dialogRef.close({event:'Accept'});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { AgGridModule } from '@ag-grid-community/angular';\r\nimport { Component, OnInit, NgModule, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AllCommunityModules, ColumnApi, Module } from '@ag-grid-community/all-modules';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BtnEditRenderedComponent } from '../btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from '../btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from '../btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-data-grid',\r\n  templateUrl: './data-grid.component.html',\r\n  styleUrls: ['./data-grid.component.scss']\r\n})\r\nexport class DataGridComponent implements OnInit {\r\n\r\n  _eventRefreshSubscription: any;\r\n  _eventGetSelectedRowsSubscription: any;\r\n  _eventGetAllRowsSubscription: any;\r\n  _eventSaveAgGridStateSubscription: any;\r\n  modules: Module[] = AllCommunityModules;\r\n\r\n\r\n  UndeRedoActions\r\n  searchValue: string;\r\n  gridApi: any;\r\n  gridColumnApi: any;\r\n  statusColumn = false;\r\n  changesMap: Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\r\n  // We will save the id of edited cells and the number of editions done.\r\n  params: any; // Last parameters of the grid (in case we do apply changes we will need it) \r\n  rowData: any[];\r\n  changeCounter: number; // Number of editions done above any cell \r\n  previousChangeCounter: number; // Number of ditions done after the last modification(changeCounter)\r\n  redoCounter: number; // Number of redo we can do\r\n  modificationChange = false;\r\n  undoNoChanges = false; // Boolean that indicates if an undo hasn't modifications\r\n  gridOptions;\r\n\r\n\r\n  @Input() eventRefreshSubscription: Observable<boolean>;\r\n  @Input() eventGetSelectedRowsSubscription: Observable<boolean>;\r\n  @Input() eventGetAllRowsSubscription: Observable<boolean>;\r\n  @Input() eventSaveAgGridStateSubscription: Observable<boolean>;\r\n  @Input() eventAddItemsSubscription: Observable<boolean>;\r\n  @Input() frameworkComponents: any;\r\n  @Input() columnDefs: any[];\r\n  @Input() getAll: () => Observable<any>;\r\n  @Input() discardChangesButton: boolean;\r\n  @Input() id: any;\r\n  @Input() undoButton: boolean;\r\n  @Input() defaultColumnSorting: string;\r\n  @Input() redoButton: boolean;\r\n  @Input() applyChangesButton: boolean;\r\n  @Input() deleteButton: boolean;\r\n  @Input() newButton: boolean;\r\n  @Input() actionButton: boolean;\r\n  @Input() addButton: boolean;\r\n  @Input() globalSearch: boolean;\r\n  @Input() themeGrid: any;\r\n  @Input() singleSelection: boolean;\r\n  @Input() nonEditable: boolean;\r\n  @Input() title: string;\r\n  @Input() hideExportButton: boolean;\r\n  @Input() hideDuplicateButton: boolean;\r\n  @Input() hideSearchReplaceButton: boolean;\r\n\r\n\r\n  @Output() remove: EventEmitter<any[]>;\r\n  @Output() new: EventEmitter<number>;\r\n  @Output() add: EventEmitter<number>;\r\n  @Output() sendChanges: EventEmitter<any[]>;\r\n  @Output() duplicate: EventEmitter<any[]>;\r\n  @Output() getSelectedRows: EventEmitter<any[]>;\r\n  @Output() getAllRows: EventEmitter<any[]>;\r\n  @Output() getAgGridState: EventEmitter<any[]>;\r\n\r\n\r\n  constructor(public dialog: MatDialog,\r\n    public translate: TranslateService,\r\n    private elRef: ElementRef) {\r\n    this.translate = translate;\r\n\r\n    this.frameworkComponents = {\r\n      btnEditRendererComponent: BtnEditRenderedComponent,\r\n      btnCheckboxRendererComponent: BtnCheckboxRenderedComponent,\r\n      btnCheckboxFilterComponent: BtnCheckboxFilterComponent\r\n    };\r\n\r\n    this.remove = new EventEmitter();\r\n    this.new = new EventEmitter();\r\n    this.add = new EventEmitter();\r\n    this.sendChanges = new EventEmitter();\r\n    this.getSelectedRows = new EventEmitter();\r\n    this.duplicate = new EventEmitter();\r\n    this.getAllRows = new EventEmitter();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.gridOptions = {\r\n      defaultColDef: {\r\n        sortable: true,\r\n        flex: 1,\r\n        filter: true,\r\n        editable: !this.nonEditable,\r\n        cellStyle: { backgroundColor: '#FFFFFF' },\r\n        suppressMenu: true,\r\n        resizable: true\r\n      },\r\n      columnTypes: {\r\n        dateColumn: {\r\n          filter: 'agDateColumnFilter',\r\n          filterParams: {\r\n            comparator(filterLocalDateAtMidnight, cellValue) {\r\n              const dateCellValue = new Date(cellValue);\r\n              const dateFilter = new Date(filterLocalDateAtMidnight);\r\n\r\n              if (dateCellValue.getTime() < dateFilter.getTime()) {\r\n                return -1;\r\n              } else if (dateCellValue.getTime() > dateFilter.getTime()) {\r\n                return 1;\r\n              } else {\r\n                return 0;\r\n              }\r\n            },\r\n          },\r\n          suppressMenu: true\r\n        }\r\n      },\r\n      rowSelection: 'multiple',\r\n      singleClickEdit: true,\r\n      // suppressHorizontalScroll: true,\r\n      localeTextFunc: (key: string, defaultValue: string) => {\r\n        const data = this.translate.instant(key);\r\n        return data === key ? defaultValue : data;\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.changesMap.clear();\r\n        this.changeCounter = 0;\r\n        this.previousChangeCounter = 0;\r\n        this.redoCounter = 0;\r\n        this.getElements();\r\n      });\r\n    }\r\n    if (this.eventGetSelectedRowsSubscription) {\r\n      this._eventGetSelectedRowsSubscription = this.eventGetSelectedRowsSubscription.subscribe(() => {\r\n        this.emitSelectedRows();\r\n      });\r\n    }\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventSaveAgGridStateSubscription) {\r\n      this._eventSaveAgGridStateSubscription = this.eventSaveAgGridStateSubscription.subscribe(() => {\r\n        this.saveAgGridState();\r\n      });\r\n    }\r\n\r\n    if (this.eventAddItemsSubscription) {\r\n      this.eventAddItemsSubscription.subscribe(\r\n        (items: any) => {\r\n          this.addItems(items);\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  firstDataRendered(): void {\r\n    if (localStorage.agGridState != undefined) {\r\n      let agGridState = JSON.parse(localStorage.agGridState)\r\n      if (agGridState.idAgGrid != undefined && agGridState.idAgGrid == this.id) {\r\n        this.gridApi.setFilterModel(agGridState.filterState);\r\n        this.gridColumnApi.setColumnState(agGridState.colState);\r\n        this.gridApi.setSortModel(agGridState.sortState);\r\n        this.searchValue = agGridState.valueSearchGeneric;\r\n        this.quickSearch();\r\n        this.removeAgGridState();\r\n      } else if (this.id != undefined) {\r\n        this.removeAgGridState();\r\n      }\r\n    }\r\n  }\r\n\r\n  onGridReady(params): void {\r\n    if (this.singleSelection) { this.gridOptions.rowSelection = 'single' }\r\n    // if (this.nonEditable) {this.gridOptions.defaultColDef.editable = false}\r\n    this.params = params;\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n    this.getElements();\r\n    console.log(this.columnDefs);\r\n    for (const col of this.columnDefs) {\r\n      if (col.field === 'status') {\r\n        console.log(\"status column true\");\r\n\r\n        this.statusColumn = true;\r\n      }\r\n    }\r\n    if (this.defaultColumnSorting) {\r\n      const sortModel = [\r\n        { colId: this.defaultColumnSorting, sort: 'asc' }\r\n      ];\r\n      this.gridApi.setSortModel(sortModel);\r\n    }\r\n  }\r\n\r\n\r\n  areRowsSelected(): Boolean {\r\n    if (this.gridApi != null && this.gridApi.getSelectedNodes().length > 0) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n\r\n  emitSelectedRows(): void {\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.getSelectedRows.emit(selectedData);\r\n  }\r\n\r\n  emitAllRows(): void {\r\n    let rowData = [];\r\n    this.gridApi.forEachNode(node => rowData.push(node.data));\r\n    this.getAllRows.emit(rowData);\r\n  }\r\n\r\n  saveAgGridState(): void {\r\n    let agGridState = {\r\n      idAgGrid: this.id,\r\n      colState: this.gridColumnApi.getColumnState(),\r\n      filterState: this.gridApi.getFilterModel(),\r\n      sortState: this.gridApi.getSortModel(),\r\n      valueSearchGeneric: this.searchValue\r\n    };\r\n\r\n    localStorage.setItem(\"agGridState\", JSON.stringify(agGridState));\r\n\r\n  }\r\n  removeAgGridState(): void {\r\n    localStorage.removeItem(\"agGridState\")\r\n  }\r\n\r\n  getColumnKeysAndHeaders(columnkeys: Array<any>): String {\r\n    let header: Array<any> = [];\r\n    if (this.columnDefs.length == 0) { return '' };\r\n\r\n    let allColumnKeys = this.gridOptions.columnApi.getAllDisplayedColumns();\r\n    // console.log(allColumnKeys);\r\n    allColumnKeys.forEach(element => {\r\n      if (element.userProvidedColDef.headerName !== '') {\r\n        columnkeys.push(element.userProvidedColDef.field);\r\n        header.push(element.userProvidedColDef.headerName);\r\n      }\r\n\r\n\r\n    });\r\n\r\n    return header.join(\",\");\r\n  }\r\n\r\n\r\n  exportData(): void {\r\n    let columnkeys: Array<any> = [];\r\n    let customHeader: String = '';\r\n    customHeader = this.getColumnKeysAndHeaders(columnkeys)\r\n    let params = {\r\n      onlySelected: true,\r\n      columnKeys: columnkeys,\r\n      customHeader: customHeader,\r\n      skipHeader: true\r\n    };\r\n    this.gridApi.exportDataAsCsv(params);\r\n  }\r\n\r\n  quickSearch(): void {\r\n    this.gridApi.setQuickFilter(this.searchValue);\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n      .subscribe((items) => {\r\n        this.rowData = items;\r\n        this.gridApi.setRowData(this.rowData);\r\n        this.setSize()\r\n        // this.gridApi.sizeColumnsToFit()\r\n        console.log(this.rowData);\r\n\r\n      });\r\n  }\r\n\r\n  setSize() {\r\n\r\n    var allColumnIds = [];\r\n    let columns = this.gridOptions.columnApi.getAllColumns();\r\n    columns.forEach(function (column) {\r\n      allColumnIds.push(column.colId);\r\n    });\r\n\r\n    this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\r\n\r\n    let grid = this.gridOptions.api\r\n    let availableWidth = grid.gridPanel.eBodyViewport.clientWidth;\r\n\r\n    let usedWidth = grid.gridPanel.columnController.getWidthOfColsInList(columns);\r\n\r\n    if (usedWidth < availableWidth) {\r\n      grid.sizeColumnsToFit();\r\n    }\r\n\r\n  }\r\n\r\n  addItems(newItems: any[]): void {\r\n    console.log(newItems);\r\n    let itemsToAdd: Array<any> = [];\r\n\r\n    newItems.forEach(item => {\r\n\r\n      if (item.id == undefined || (this.rowData.find(element => element.id === item.id)) == undefined) {\r\n        if (this.statusColumn) {\r\n          item.status = 'pendingCreation'\r\n        }\r\n        itemsToAdd.push(item);\r\n        this.rowData.push(item);\r\n      }\r\n      else {\r\n        console.log(`Item with the ID ${item.id} already exists`)\r\n      }\r\n    });\r\n    this.gridApi.updateRowData({ add: itemsToAdd });\r\n\r\n    console.log(this.columnDefs);\r\n    // params.oldValue!=undefined\r\n  }\r\n\r\n\r\n  changeHeight(value) {\r\n    let pixels = \"\";\r\n    if (value === '5') {\r\n      pixels = \"200px\"\r\n    } else if (value === '10') {\r\n      pixels = \"315px\"\r\n    } else if (value === '20') {\r\n      pixels = \"630px\"\r\n    } else {\r\n      pixels = \"1550px\"\r\n    }\r\n    this.elRef.nativeElement.parentElement.style.height = pixels;\r\n  }\r\n\r\n  removeData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    const selectedNodes = this.gridApi.getSelectedNodes();\r\n    const selectedData = selectedNodes.map(node => node.data);\r\n    this.remove.emit(selectedData);\r\n\r\n    if (this.statusColumn) {\r\n      const selectedRows = selectedNodes.map(node => node.id);\r\n\r\n      for (const id of selectedRows) {\r\n        this.gridApi.getRowNode(id).data.status = 'pendingDelete';\r\n      }\r\n      this.gridOptions.api.refreshCells();\r\n    }\r\n    this.gridOptions.api.deselectAll();\r\n  }\r\n\r\n  newData(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.new.emit(-1);\r\n  }\r\n\r\n  onAddButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.add.emit(-1);\r\n  }\r\n\r\n  onDuplicateButtonClicked(): void {\r\n    this.gridApi.stopEditing(false);\r\n    console.log(this.changeCounter);\r\n    if (this.changeCounter > 0) {\r\n      const dialogRef = this.dialog.open(DialogMessageComponent);\r\n      dialogRef.componentInstance.title = this.translate.instant('caution')\r\n      dialogRef.componentInstance.message = this.translate.instant('duplicateMessage')\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result) {\r\n          if (result.event === 'Accept') {\r\n            const selectedNodes = this.gridApi.getSelectedNodes();\r\n            const selectedData = selectedNodes.map(node => node.data);\r\n            this.duplicate.emit(selectedData);\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    else {\r\n      const selectedNodes = this.gridApi.getSelectedNodes();\r\n      const selectedData = selectedNodes.map(node => node.data);\r\n      this.duplicate.emit(selectedData);\r\n    }\r\n  }\r\n\r\n\r\n  applyChanges(): void {\r\n    const itemsChanged: any[] = [];\r\n    this.gridApi.stopEditing(false);\r\n    for (const key of this.changesMap.keys()) {\r\n      itemsChanged.push(this.gridApi.getRowNode(key).data);\r\n    }\r\n    this.sendChanges.emit(itemsChanged);\r\n    this.changesMap.clear();\r\n    this.changeCounter = 0;\r\n    this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n    this.params.colDef.cellStyle = { backgroundColor: '#FFFFFF' };\r\n    this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n\r\n  deleteChanges(): void {\r\n    this.gridApi.stopEditing(false);\r\n\r\n    while (this.changeCounter > 0) {\r\n      this.undo();\r\n    }\r\n\r\n    this.changesMap.clear();\r\n    //this.previousChangeCounter = 0;\r\n    this.redoCounter = 0;\r\n\r\n\r\n    //this.params.colDef.cellStyle =  {backgroundColor: '#FFFFFF'};\r\n    //this.gridApi.redrawRows();\r\n  }\r\n\r\n\r\n  onFilterModified(): void {\r\n    this.deleteChanges();\r\n  }\r\n\r\n\r\n  undo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.undoCellEditing();\r\n    this.changeCounter -= 1;\r\n    this.redoCounter += 1;\r\n  }\r\n\r\n  redo(): void {\r\n    this.gridApi.stopEditing(false);\r\n    this.gridApi.redoCellEditing();\r\n    this.changeCounter += 1;\r\n    this.redoCounter -= 1;\r\n  }\r\n\r\n\r\n  onCellEditingStopped(e) {\r\n    if (this.modificationChange) {\r\n      this.changeCounter++;\r\n      this.redoCounter = 0;\r\n      this.onCellValueChanged(e);\r\n      this.modificationChange = false;\r\n    }\r\n  }\r\n\r\n\r\n  onCellValueChanged(params): void {\r\n    console.log(\"value Change\")\r\n    this.params = params;\r\n    if (this.changeCounter > this.previousChangeCounter)\r\n    // True if we have edited some cell or we have done a redo \r\n    {\r\n\r\n      if (params.oldValue !== params.value && !(params.oldValue == null && params.value === '')) {\r\n\r\n        if (!this.changesMap.has(params.node.id)) // If it's firts edit of a cell, we add it to the map and we paint it\r\n        {\r\n          const addMap: Map<string, number> = new Map<string, number>();\r\n          addMap.set(params.colDef.field, 1)\r\n          this.changesMap.set(params.node.id, addMap);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = 'pendingModify'\r\n            }\r\n          }\r\n        }\r\n        else {\r\n          if (!this.changesMap.get(params.node.id).has(params.colDef.field)) {\r\n\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, 1);\r\n          }\r\n\r\n          else {\r\n            // We already had edited this cell, so we only increment number of changes of it on the map \r\n            const currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field);\r\n            this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges + 1));\r\n          }\r\n\r\n        }\r\n        this.paintCells(params, this.changesMap); //We paint the row of the edited cell \r\n        this.previousChangeCounter++; //We match the current previousChangeCounter with changeCounter\r\n      }\r\n\r\n    }\r\n    else if (this.changeCounter < this.previousChangeCounter) { // True if we have done an undo\r\n      let currentChanges = -1;\r\n      if (this.changesMap.has(params.node.id)) { currentChanges = this.changesMap.get(params.node.id).get(params.colDef.field); }\r\n\r\n      if (currentChanges === 1) { //Once the undo it's done, cell is in his initial status\r\n\r\n        this.changesMap.get(params.node.id).delete(params.colDef.field);\r\n        if (this.changesMap.get(params.node.id).size === 0) { // No more modifications in this row\r\n          this.changesMap.delete(params.node.id);\r\n          const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n          if (this.statusColumn) {\r\n            if (this.gridApi.getRowNode(params.node.id).data.status !== 'pendingCreation') {\r\n              this.gridApi.getRowNode(params.node.id).data.status = ''\r\n            }\r\n          };\r\n          // We paint it white\r\n          this.gridApi.redrawRows({ rowNodes: [row] });\r\n\r\n        }\r\n        else {\r\n          this.paintCells(params, this.changesMap);\r\n        }\r\n\r\n      }\r\n      else if (currentChanges > 1) // The cell isn't in his initial state yet\r\n      {                                 //We can't do else because we can be doing an undo without changes \r\n        this.changesMap.get(params.node.id).set(params.colDef.field, (currentChanges - 1));\r\n\r\n        this.paintCells(params, this.changesMap);//Not initial state -> green background\r\n\r\n      }\r\n      this.previousChangeCounter--;  //We decrement previousChangeCounter because we have done undo\r\n    }\r\n    else { // Control of modifications without changes\r\n      if (!(params.oldValue == null && params.value === '')) {\r\n        let newValue: string;\r\n        if (params.value == null) { newValue = '' }\r\n        else { newValue = params.value.toString() }\r\n\r\n        if ((params.oldValue != undefined && params.oldValue != null && params.oldValue.toString() !== newValue.toString())\r\n          || ((params.oldValue == undefined || params.oldValue == null) && newValue != null)) {\r\n\r\n          this.modificationChange = true;\r\n          if (params.colDef.cellRenderer == \"btnCheckboxRendererComponent\") {\r\n            var undoRedoActions = {\r\n              cellValueChanges: this.gridApi.undoRedoService.cellValueChanges\r\n            };\r\n            this.gridApi.undoRedoService.pushActionsToUndoStack(undoRedoActions);\r\n            this.gridApi.undoRedoService.isFilling = false;\r\n            this.onCellEditingStopped(params);\r\n          }\r\n        }\r\n        else { this.modificationWithoutChanges(params) }\r\n\r\n      }\r\n      else { this.modificationWithoutChanges(params) }\r\n    }\r\n  }\r\n\r\n  modificationWithoutChanges(params: any) {\r\n\r\n    if (this.changesMap.has(params.node.id)) //Modification without changes in en edited cell\r\n    {\r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change without changes internally \r\n        this.undoNoChanges = true;\r\n        this.paintCells(params, this.changesMap);  //The cell has modifications yet -> green background \r\n      }\r\n      else { this.undoNoChanges = false; }\r\n\r\n\r\n    }\r\n    else {\r\n      //With the internally undo will enter at this function, so we have to control when done the undo or not \r\n      if (!this.undoNoChanges) {\r\n        this.gridApi.undoCellEditing(); // Undo to delete the change internally\r\n        this.undoNoChanges = true;\r\n      }\r\n      else { this.undoNoChanges = false; }\r\n    }\r\n\r\n  }\r\n\r\n  getColumnIndexByColId(api: ColumnApi, colId: string): number {\r\n    return api.getAllColumns().findIndex(col => col.getColId() === colId);\r\n  }\r\n  paintCells(params: any, changesMap: Map<number, Map<string, number>>,) {\r\n    const row = this.gridApi.getDisplayedRowAtIndex(params.rowIndex);\r\n\r\n    this.changeCellStyleColumns(params, changesMap, '#E8F1DE');\r\n    this.gridApi.redrawRows({ rowNodes: [row] });\r\n    this.changeCellStyleColumns(params, changesMap, '#FFFFFF');\r\n    // We will define cellStyle white to future modifications (like filter)\r\n  }\r\n\r\n  changeCellStyleColumns(params: any, changesMap: Map<number, Map<string, number>>, color: string) {\r\n\r\n    for (const key of changesMap.get(params.node.id).keys()) {\r\n      const columnNumber = this.getColumnIndexByColId(this.gridColumnApi, key);\r\n      this.gridColumnApi.columnController.gridColumns[columnNumber].colDef.cellStyle = { backgroundColor: color };\r\n    }\r\n\r\n\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\n\r\nexport interface DialogData {\r\n  _GetAllsTable:  Array<() => Observable<any>>;\r\n  _columnDefsTable: Array<any[]>;\r\n  _singleSelectionTable: Array<boolean>;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-dialog-grid',\r\n  templateUrl: './dialog-grid.component.html',\r\n  styleUrls: ['./dialog-grid.component.scss']\r\n})\r\nexport class DialogGridComponent implements OnInit {\r\n\r\n  title: string;\r\n  getAllRows: Subject<boolean> = new Subject <boolean>();\r\n  private _addButtonClickedSubscription: any;\r\n  tablesReceivedCounter: number;\r\n  allRowsReceived: Array<any[]> = [];\r\n\r\n  //Inputs\r\n  themeGrid: any;\r\n  getAllsTable: Array<() => Observable<any>>;\r\n  columnDefsTable: Array<any[]>;\r\n  singleSelectionTable: Array<boolean>;\r\n  titlesTable: Array<string>;\r\n  addButtonClickedSubscription: Observable <boolean> ;\r\n  nonEditable: boolean;\r\n\r\n  //Outputs\r\n  @Output() joinTables : EventEmitter<Array<any[]>>;\r\n\r\n  \r\n\r\n\r\n  constructor(private dialogRef: MatDialogRef<DialogGridComponent>) {\r\n    \r\n    this.joinTables = new EventEmitter();\r\n    // this.nonEditable = true;\r\n    this.tablesReceivedCounter = 0;\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.addButtonClickedSubscription) {\r\n      this._addButtonClickedSubscription = this.addButtonClickedSubscription.subscribe(() => {\r\n        this.getAllSelectedRows();\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  getAllSelectedRows() {\r\n    this.getAllRows.next(true);\r\n  }\r\n\r\n  joinRowsReceived(data: any[])\r\n  {\r\n      this.allRowsReceived.push(data);\r\n      this.tablesReceivedCounter++;\r\n      if(this.tablesReceivedCounter === this.getAllsTable.length)\r\n      {\r\n        this.doAdd(this.allRowsReceived);\r\n        console.log(this.allRowsReceived);\r\n      }\r\n  }\r\n\r\n  doAdd(rowsToAdd){\r\n    this.dialogRef.close({event:'Add',data: rowsToAdd});\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormGroup,FormControl,Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog'; \r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DialogMessageComponent } from '../dialog-message/dialog-message.component';\r\n\r\n@Component({\r\n  selector: 'app-dialog-form',\r\n  templateUrl: './dialog-form.component.html',\r\n  styleUrls: ['./dialog-form.component.scss']\r\n})\r\nexport class DialogFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  title: string;\r\n  HTMLReceived;\r\n  constructor(\r\n    private dialogRef: MatDialogRef<DialogFormComponent>,\r\n    public dialog: MatDialog,\r\n    private translate: TranslateService) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  doAdd(){\r\n    if(this.form.valid) { this.dialogRef.close({event:'Add'}); }\r\n    else {\r\n       const dialogRef = this.dialog.open(DialogMessageComponent);\r\n       dialogRef.componentInstance.title = this.translate.instant(\"atention\")\r\n       dialogRef.componentInstance.message = this.translate.instant(\"requiredFieldMessage\")\r\n       dialogRef.componentInstance.hideCancelButton = true;\r\n       dialogRef.afterClosed().subscribe();\r\n    }\r\n\r\n  }\r\n\r\n  closeDialog(){\r\n    this.dialogRef.close({event:'Cancel'});\r\n  }\r\n\r\n}\r\n","import { FlatTreeControl } from '@angular/cdk/tree';\r\nimport { Component, EventEmitter, Injectable, Input, Output,ElementRef, ViewChild } from '@angular/core';\r\nimport { MatTreeFlatDataSource, MatTreeFlattener } from '@angular/material/tree';\r\nimport { BehaviorSubject, Observable, of as observableOf } from 'rxjs';\r\nimport { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { forEach } from 'jszip';\r\n\r\n/**\r\n * File node data with nested structure.\r\n * Each node has a name, and a type or a list of children.\r\n */\r\nexport class FileNode {\r\n  id: string;\r\n  children: FileNode[];\r\n  name: string;\r\n  type: any;\r\n  active: any\r\n  cartographyId: any\r\n  cartographyName: any\r\n  datasetURL: any\r\n  description: any\r\n  filterGetFeatureInfo: any\r\n  filterGetMap: any\r\n  filterSelectable: any\r\n  isFolder: any\r\n  metadataURL: any\r\n  order: any\r\n  parent: any\r\n  queryableActive: any\r\n  radio: any\r\n  tooltip: any\r\n  _links: any\r\n  status: any\r\n}\r\n\r\n/** Flat node with expandable and level information */\r\nexport class FileFlatNode {\r\n  constructor(\r\n    public expandable: boolean,\r\n    public name: string,\r\n    public level: number,\r\n    public type: any,\r\n    public id: string,\r\n    public status: string\r\n  ) { }\r\n}\r\n\r\n\r\n\r\n/**\r\n * File database, it can build a tree structured Json object from string.\r\n * Each node in Json object represents a file or a directory. For a file, it has name and type.\r\n * For a directory, it has name and children (a list of files or directories).\r\n * The input will be a json object string, and the output is a list of `FileNode` with nested\r\n * structure.\r\n */\r\n@Injectable()\r\nexport class FileDatabase {\r\n  dataChange = new BehaviorSubject<FileNode[]>([]);\r\n  get data(): any { return this.dataChange.value; }\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  initialize(dataObj) {\r\n\r\n    // Build the tree nodes from Json object. The result is a list of `FileNode` with nested\r\n    //     file node as children.\r\n    const data = this.buildFileTree(dataObj, 0);\r\n\r\n    // Notify the change.\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  /**\r\n   * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\r\n   * The return value is the list of `FileNode`.\r\n   */\r\n  buildFileTree(arrayTreeNodes: any[], level: number): any {\r\n    var map = {};\r\n    if(arrayTreeNodes.length===0)\r\n    {\r\n      let root = {\r\n        isFolder:true,\r\n        name:'Root',\r\n        type: 'folder',\r\n        isRoot: true,\r\n        children: []\r\n      }\r\n      map['root']=root;\r\n    }\r\n    else{\r\n      arrayTreeNodes.forEach((treeNode) => {\r\n        var obj = treeNode;\r\n        obj.children = [];\r\n        obj.type= (treeNode.isFolder)? \"folder\" : \"node\";\r\n  \r\n        if(!map[obj.id]) {map[obj.id] = obj;}\r\n        else{\r\n          let previousChildren= map[obj.id].children\r\n          map[obj.id] = obj;\r\n          map[obj.id].children=previousChildren\r\n        }\r\n        var parent = obj.parent || 'root';\r\n        if (!map[parent]) {\r\n          map[parent] = {\r\n            children: []\r\n          };\r\n        }\r\n        map[parent].children.push(obj);\r\n      });\r\n      map['root'].type='folder';\r\n      map['root'].name='Root';\r\n      map['root'].isFolder=true;\r\n      map['root'].isRoot=true;\r\n    }\r\n\r\n\r\n    return map['root'];\r\n  }\r\n  \r\n\r\n  deleteItem(node: FileNode) {\r\n    this.deleteNode(this.data.children, node);\r\n    this.dataChange.next(this.data);\r\n  }\r\n\r\n  deleteNode(nodes: FileNode[], nodeToDelete: FileNode) {\r\n    const index = nodes.indexOf(nodeToDelete, 0);\r\n    if (index > -1) {\r\n      nodes.splice(index, 1);\r\n    } else {\r\n      nodes.forEach(node => {\r\n        if (node.children && node.children.length > 0) {\r\n          this.deleteNode(node.children, nodeToDelete);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  copyPasteItem(from: FileNode, to: FileNode): FileNode {\r\n    const newItem = this.insertItem(to, from);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemAbove(from: FileNode, to: FileNode): FileNode {\r\n    const newItem = this.insertItemAbove(to, from);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  copyPasteItemBelow(from: FileNode, to: FileNode): FileNode {\r\n    const newItem = this.insertItemBelow(to, from);\r\n\r\n    return newItem;\r\n  }\r\n\r\n  /** Add an item to to-do list */\r\n  \r\n  getNewItem(node:FileNode){\r\n    const newItem = {\r\n      name: node.name,\r\n      children: node.children,\r\n      type: node.type,\r\n      id: node.id, \r\n      active: node.active,\r\n      cartographyId: node.cartographyId,\r\n      cartographyName: node.cartographyName,\r\n      datasetURL: node.datasetURL,\r\n      description: node.description,\r\n      filterGetFeatureInfo: node.filterGetFeatureInfo,\r\n      filterGetMap: node.filterGetMap,\r\n      filterSelectable: node.filterSelectable,\r\n      isFolder: node.isFolder,\r\n      metadataURL: node.metadataURL,\r\n      order: node.order,\r\n      queryableActive: node.queryableActive,\r\n      radio: node.radio,\r\n      tooltip: node.tooltip,\r\n      _links: node._links } as FileNode;\r\n\r\n    return newItem;\r\n  }\r\n\r\n  insertItem(parent: FileNode, node: FileNode): FileNode {\r\n    if (!parent.children) {\r\n      parent.children = [];\r\n    }\r\n    const newItem = this.getNewItem(node)\r\n    newItem.parent = parent==null || parent.id==undefined?null:parent.id;\r\n\r\n    parent.children.push(newItem);\r\n    this.dataChange.next(this.data);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemAbove(node: FileNode, nodeDrag: FileNode): FileNode {\r\n    const parentNode = this.getParentFromNodes(node);\r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node), 0, newItem);\r\n    } else {\r\n      this.data.children.splice(this.data.children.indexOf(node), 0, newItem);\r\n    }\r\n    this.dataChange.next(this.data);\r\n    return newItem;\r\n  }\r\n\r\n  insertItemBelow(node: FileNode, nodeDrag: FileNode): FileNode {\r\n    const parentNode = this.getParentFromNodes(node);\r\n   \r\n    const newItem = this.getNewItem(nodeDrag)\r\n    newItem.parent = parentNode==null || parentNode.id==undefined?null:parentNode.id;\r\n\r\n    if (parentNode != null) {\r\n      parentNode.children.splice(parentNode.children.indexOf(node) + 1, 0, newItem);\r\n    } else {\r\n      this.data.children.splice(this.data.children.indexOf(node) + 1, 0, newItem);\r\n    }\r\n    this.dataChange.next(this.data);\r\n    return newItem;\r\n  }\r\n\r\n  \r\n  getParentFromNodes(node: FileNode): FileNode {\r\n    for (let i = 0; i < this.data.children.length; ++i) {\r\n      const currentRoot = this.data.children[i];\r\n      const parent = this.getParent(currentRoot, node);\r\n      if (parent != null) {\r\n        return parent;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  \r\n  getParent(currentRoot: FileNode, node: FileNode): FileNode {\r\n    if (currentRoot.children && currentRoot.children.length > 0) {\r\n      for (let i = 0; i < currentRoot.children.length; ++i) {\r\n        const child = currentRoot.children[i];\r\n        if (child === node) {\r\n          return currentRoot;\r\n        } else if (child.children && child.children.length > 0) {\r\n          const parent = this.getParent(child, node);\r\n          if (parent != null) {\r\n            return parent;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @title Tree with flat nodes\r\n */\r\n@Component({\r\n  selector: 'app-data-tree',\r\n  templateUrl: 'data-tree.component.html',\r\n  styleUrls: ['data-tree.component.scss'],\r\n  providers: [FileDatabase]\r\n})\r\nexport class DataTreeComponent {\r\n  @Output() createNode: EventEmitter<any>;\r\n  @Output() createFolder: EventEmitter<any>;\r\n  @Output() emitNode: EventEmitter<any>;\r\n  @Output() emitAllNodes: EventEmitter<any>;\r\n  @Input() eventNodeUpdatedSubscription: Observable <any> ;\r\n  @Input() eventCreateNodeSubscription: Observable <any> ;\r\n  @Input() eventGetAllRowsSubscription: Observable <any> ;\r\n  @Input() eventRefreshSubscription: Observable <any> ;\r\n  private _eventNodeUpdatedSubscription: any;\r\n  private _eventCreateNodeSubscription: any;\r\n  private _eventGetAllRowsSubscription: any;\r\n  private _eventRefreshSubscription: any;\r\n  treeControl: FlatTreeControl<FileFlatNode>;\r\n  treeFlattener: MatTreeFlattener<FileNode, FileFlatNode>;\r\n  dataSource: MatTreeFlatDataSource<FileNode, FileFlatNode>;\r\n  // expansion model tracks expansion state\r\n  expansionModel = new SelectionModel<string>(true);\r\n  dragging = false;\r\n  expandTimeout: any;\r\n  expandDelay = 1000;\r\n  validateDrop = false;\r\n  treeData: any;\r\n\r\n  @Input() getAll: () => Observable<any>;\r\n\r\n\r\n  /* Drag and drop */\r\n  dragNode: any;\r\n  dragNodeExpandOverWaitTimeMs = 1500;\r\n  dragNodeExpandOverNode: any;\r\n  dragNodeExpandOverTime: number;\r\n  dragNodeExpandOverArea: string;\r\n  @ViewChild('emptyItem') emptyItem: ElementRef;\r\n\r\n    /** Map from flat node to nested node. This helps us finding the nested node to be modified */\r\n    flatNodeMap = new Map<FileFlatNode, FileNode>();\r\n\r\n    /** Map from nested node to flattened node. This helps us to keep the same object for selection */\r\n    nestedNodeMap = new Map<FileNode, FileFlatNode>();\r\n\r\n\r\n  constructor(public database: FileDatabase) {\r\n    this.emitNode = new EventEmitter();\r\n    this.createNode = new EventEmitter();\r\n    this.createFolder = new EventEmitter();\r\n    this.emitAllNodes = new EventEmitter();\r\n    this.treeFlattener = new MatTreeFlattener(this.transformer, this._getLevel,\r\n      this._isExpandable, this._getChildren);\r\n    this.treeControl = new FlatTreeControl<FileFlatNode>(this._getLevel, this._isExpandable);\r\n    this.dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\r\n \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n    if(this.eventNodeUpdatedSubscription)\r\n    {\r\n      this.eventNodeUpdatedSubscription.subscribe(\r\n        (node) => {\r\n          this.updateNode(node);\r\n        }\r\n      )\r\n    }\r\n    if(this.eventCreateNodeSubscription)\r\n    {\r\n      this.eventCreateNodeSubscription.subscribe(\r\n        (node) => {\r\n          if(node.isFolder) this.createNewFolder(node);\r\n          else this.createNewNode(node);\r\n        }\r\n      )\r\n    }\r\n\r\n    if (this.eventGetAllRowsSubscription) {\r\n      this._eventGetAllRowsSubscription = this.eventGetAllRowsSubscription.subscribe(() => {\r\n        this.emitAllRows();\r\n      });\r\n    }\r\n\r\n    if (this.eventRefreshSubscription) {\r\n      this._eventRefreshSubscription = this.eventRefreshSubscription.subscribe(() => {\r\n        this.getElements();\r\n      });\r\n    }\r\n    \r\n    this.getElements();\r\n  }\r\n\r\n  getElements(): void {\r\n    this.getAll()\r\n    .subscribe((items) => {\r\n      this.treeData = items;\r\n      this.database.initialize(this.treeData);\r\n      this.database.dataChange.subscribe(data => this.rebuildTreeForData([data]));\r\n    });\r\n  }\r\n\r\n\r\n  transformer = (node: FileNode, level: number) => {\r\n    const existingNode = this.nestedNodeMap.get(node);\r\n    const flatNode = existingNode && existingNode.name === node.name\r\n      ? existingNode\r\n      : new FileFlatNode((node.children && node.children.length > 0),node.name,level,node.type,node.id,node.status);\r\n\r\n    this.flatNodeMap.set(flatNode, node);\r\n    this.nestedNodeMap.set(node, flatNode);\r\n    return flatNode;\r\n  \r\n  }\r\n  private _getLevel = (node: FileFlatNode) => node.level;\r\n  private _isExpandable = (node: FileFlatNode) => node.expandable;\r\n  private _getChildren = (node: FileNode): Observable<FileNode[]> => observableOf(node.children);\r\n  hasChild = (_: number, _nodeData: FileFlatNode) => _nodeData.expandable;\r\n\r\n\r\n  /**\r\n   * This constructs an array of nodes that matches the DOM\r\n   */\r\n  visibleNodes(): FileNode[] {\r\n    const result = [];\r\n\r\n    function addExpandedChildren(node: FileNode, expanded: string[]) {\r\n      result.push(node);\r\n      if (expanded.indexOf(node.id) != -1) {\r\n        node.children.map((child) => addExpandedChildren(child, expanded));\r\n      }\r\n    }\r\n    this.dataSource.data.forEach((node) => {\r\n      addExpandedChildren(node, this.expansionModel.selected);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n   findNodeSiblings(arr: Array<any>, id: string): Array<any> {\r\n    let result, subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.id === id) {\r\n        result = arr;\r\n      } else if (item.children) {\r\n        subResult = this.findNodeSiblings(item.children, id);\r\n        if (subResult) result = subResult;\r\n      }\r\n    });\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n  handleDragStart(event, node) {\r\n    // Required by Firefox (https://stackoverflow.com/questions/19055264/why-doesnt-html5-drag-and-drop-work-in-firefox)\r\n    event.dataTransfer.setData('foo', 'bar');\r\n    event.dataTransfer.setDragImage(this.emptyItem.nativeElement, 0, 0);\r\n    this.dragNode = node;\r\n    this.treeControl.collapse(node);\r\n  }\r\n\r\n  handleDragOver(event, node) {\r\n    event.preventDefault();\r\n\r\n    // Handle node expand\r\n    if (node === this.dragNodeExpandOverNode) {\r\n      if (this.dragNode !== node && !this.treeControl.isExpanded(node)) {\r\n        if ((new Date().getTime() - this.dragNodeExpandOverTime) > this.dragNodeExpandOverWaitTimeMs) {\r\n          this.treeControl.expand(node);\r\n        }\r\n      }\r\n    } else {\r\n      this.dragNodeExpandOverNode = node;\r\n      this.dragNodeExpandOverTime = new Date().getTime();\r\n    }\r\n\r\n    // Handle drag area\r\n    const percentageX = event.offsetX / event.target.clientWidth;\r\n    const percentageY = event.offsetY / event.target.clientHeight;\r\n    if (percentageY < 0.25) {\r\n      this.dragNodeExpandOverArea = 'above';\r\n    } else if (percentageY > 0.75) {\r\n      this.dragNodeExpandOverArea = 'below';\r\n    } else {\r\n      this.dragNodeExpandOverArea = 'center';\r\n    }\r\n  }\r\n\r\n  handleDrop(event, node) {\r\n    event.preventDefault();\r\n    let toFlatNode=this.flatNodeMap.get(node);\r\n    let fromFlatNode=this.flatNodeMap.get(this.dragNode)\r\n    if (node !== this.dragNode && (this.dragNodeExpandOverArea !== 'center' || (this.dragNodeExpandOverArea === 'center' && toFlatNode.isFolder))) {\r\n      let newItem: FileNode;\r\n\r\n      if (this.dragNodeExpandOverArea === 'above') {\r\n        newItem = this.database.copyPasteItemAbove(fromFlatNode,toFlatNode);\r\n      } else if (this.dragNodeExpandOverArea === 'below') {\r\n        newItem = this.database.copyPasteItemBelow(fromFlatNode,toFlatNode);\r\n      } else {\r\n        newItem = this.database.copyPasteItem(fromFlatNode, toFlatNode);\r\n      }\r\n      let parentLvl=this.treeControl.dataNodes.find((n) => n.id === fromFlatNode.id).level;\r\n      fromFlatNode.children.forEach(child=>{\r\n        this.treeControl.dataNodes.find((n) => n.id === child.id).level=parentLvl+1\r\n      });\r\n      this.database.deleteItem(this.flatNodeMap.get(this.dragNode));\r\n      this.treeControl.expandDescendants(this.nestedNodeMap.get(newItem));\r\n    }\r\n   \r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  handleDragEnd(event) {\r\n    this.dragNode = null;\r\n    this.dragNodeExpandOverNode = null;\r\n    this.dragNodeExpandOverTime = 0;\r\n  }\r\n\r\n  /**\r\n   * The following methods are for persisting the tree expand state\r\n   * after being rebuilt\r\n   */\r\n\r\n  rebuildTreeForData(data: any[]) {\r\n    //this.dataSource.data = data;\r\n\r\n    this.dataSource.data = [];\r\n    this.dataSource.data = data;\r\n    this.treeControl.expansionModel.selected.forEach((nodeAct) => {\r\n      const node = this.treeControl.dataNodes.find((n) => n.id === nodeAct.id);\r\n      this.treeControl.expand(node);\r\n    });\r\n  }\r\n\r\n  private getParentNode(node: FileFlatNode): FileFlatNode | null {\r\n    const currentLevel = node.level;\r\n    if (currentLevel < 1) {\r\n      return null;\r\n    }\r\n    const startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\r\n    for (let i = startIndex; i >= 0; i--) {\r\n      const currentNode = this.treeControl.dataNodes[i];\r\n      if (currentNode.level < currentLevel) {\r\n        return currentNode;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  updateNode(nodeUpdated)\r\n  {\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(dataToChange, nodeUpdated.id);\r\n    let index= siblings.findIndex(node => node.id === nodeUpdated.id)\r\n    siblings[index]=nodeUpdated;\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewFolder(newFolder)\r\n  {\r\n    newFolder.type=\"folder\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newFolder.parent === null) {dataToChange[0].children.push(newFolder)}\r\n    else{\r\n      const siblings = this.findNodeSiblings(dataToChange, newFolder.parent);\r\n      let index= siblings.findIndex(node => node.id === newFolder.parent);\r\n      siblings[index].children.push(newFolder)\r\n    }\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n  createNewNode(newNode)\r\n  {\r\n    newNode.type=\"node\";\r\n    const dataToChange = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    if(newNode.parent === null) {dataToChange[0].children.push(newNode)}\r\n    else{\r\n    const siblings = this.findNodeSiblings(dataToChange, newNode.parent);\r\n    let index= siblings.findIndex(node => node.id === newNode.parent);\r\n    siblings[index].children.push(newNode)\r\n    }\r\n\r\n    this.rebuildTreeForData(dataToChange);\r\n\r\n  }\r\n\r\n\r\n\r\n  onButtonClicked(id, button: string)\r\n  {\r\n    const changedData = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    const siblings = this.findNodeSiblings(changedData, id);\r\n    let nodeClicked= siblings.find(node => node.id === id);\r\n    if(button ==='edit')  {this.emitNode.emit(nodeClicked)}\r\n    else if(button === 'newFolder') {this.createFolder.emit(nodeClicked)}\r\n    else if(button === 'newNode') {this.createNode.emit( nodeClicked)}\r\n    else if(button === 'delete') {\r\n      // let children= this.getAllChildren(nodeClicked.children)\r\n      // children.forEach(children => {\r\n      //   children.status='pendingDelete';\r\n      // });\r\n      this.deleteChildren(nodeClicked.children);\r\n      // nodeClicked.children=children\r\n      nodeClicked.status='pendingDelete'\r\n      \r\n      this.rebuildTreeForData(changedData);\r\n    }\r\n\r\n  }\r\n\r\n  emitAllRows()\r\n  {\r\n    const dataToEmit = JSON.parse(JSON.stringify(this.dataSource.data))\r\n    let allRows = this.getAllChildren(dataToEmit); \r\n    this.emitAllNodes.emit(allRows);\r\n  }\r\n\r\n  getAllChildren(arr)\r\n  {\r\n    let result = [];\r\n    let subResult;\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        subResult = this.getAllChildren(item.children);\r\n        if (subResult) result.push(...subResult);\r\n      }\r\n      result.push(item);\r\n\r\n    });\r\n    return result;\r\n  }\r\n\r\n  deleteChildren(arr)\r\n  {\r\n    arr.forEach((item, i) => {\r\n      if (item.children.length>0) {\r\n        this.deleteChildren(item.children);\r\n      }\r\n      item.status='pendingDelete'\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { BrowserAnimationsModule, NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\n//import * as ol from 'openlayers';\r\nimport { TranslateModule, TranslateLoader, TranslateService } from '@ngx-translate/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { AngularHalModule } from '@sitmun/frontend-core';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport localeCa from '@angular/common/locales/ca';\r\nimport localeEs from '@angular/common/locales/es';\r\nimport { SitmunFrontendCoreModule } from '@sitmun/frontend-core';\r\nimport { DataGridComponent } from './data-grid/data-grid.component';\r\n\r\nimport { AgGridModule } from '@ag-grid-community/angular';\r\n\r\nimport {MaterialModule} from './material-module';\r\n\r\nimport { BtnEditRenderedComponent } from './btn-edit-rendered/btn-edit-rendered.component';\r\nimport { BtnCheckboxRenderedComponent } from './btn-checkbox-rendered/btn-checkbox-rendered.component';\r\nimport { BtnCheckboxFilterComponent } from './btn-checkbox-filter/btn-checkbox-filter.component';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { DialogGridComponent } from './dialog-grid/dialog-grid.component';\r\nimport { DialogFormComponent } from './dialog-form/dialog-form.component';\r\nimport { DialogMessageComponent } from './dialog-message/dialog-message.component';\r\nimport { DataTreeComponent } from './data-tree/data-tree.component';\r\n\r\n\r\nregisterLocaleData(localeCa, 'ca');\r\nregisterLocaleData(localeEs, 'es');\r\n\r\n/** Load translation assets */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\r\n}\r\n\r\n\r\n/** SITMUN plugin core module */\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    AgGridModule,\r\n    SitmunFrontendCoreModule,\r\n    MaterialModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    })\r\n\r\n  ],\r\n  declarations: [\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    BtnEditRenderedComponent,\r\n    BtnCheckboxRenderedComponent,\r\n    BtnCheckboxFilterComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n  ],\r\n  entryComponents: [\r\n  ],\r\n  providers: [\r\n  ],\r\n  exports: [\r\n    HttpClientModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    NoopAnimationsModule,\r\n    AngularHalModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    DataGridComponent,\r\n    DataTreeComponent,\r\n    DialogGridComponent,\r\n    DialogFormComponent,\r\n    DialogMessageComponent,\r\n    SitmunFrontendCoreModule\r\n  ]\r\n})\r\nexport class SitmunFrontendGuiModule {\r\n}\r\n"]}